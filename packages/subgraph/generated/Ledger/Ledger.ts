// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get depositedToken(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get depositedValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get balanceToken(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProvidedPoint extends ethereum.Event {
  get params(): ProvidedPoint__Params {
    return new ProvidedPoint__Params(this);
  }
}

export class ProvidedPoint__Params {
  _event: ProvidedPoint;

  constructor(event: ProvidedPoint) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get providedPoint(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get providedValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get currency(): string {
    return this._event.parameters[3].value.toString();
  }

  get balancePoint(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get purchaseId(): string {
    return this._event.parameters[5].value.toString();
  }

  get shopId(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }
}

export class ProvidedToken extends ethereum.Event {
  get params(): ProvidedToken__Params {
    return new ProvidedToken__Params(this);
  }
}

export class ProvidedToken__Params {
  _event: ProvidedToken;

  constructor(event: ProvidedToken) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get providedToken(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get providedValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get currency(): string {
    return this._event.parameters[3].value.toString();
  }

  get balanceToken(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get purchaseId(): string {
    return this._event.parameters[5].value.toString();
  }

  get shopId(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }
}

export class ProvidedUnPayablePoint extends ethereum.Event {
  get params(): ProvidedUnPayablePoint__Params {
    return new ProvidedUnPayablePoint__Params(this);
  }
}

export class ProvidedUnPayablePoint__Params {
  _event: ProvidedUnPayablePoint;

  constructor(event: ProvidedUnPayablePoint) {
    this._event = event;
  }

  get phone(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get providedPoint(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get providedValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get currency(): string {
    return this._event.parameters[3].value.toString();
  }

  get balancePoint(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get purchaseId(): string {
    return this._event.parameters[5].value.toString();
  }

  get shopId(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdrawn extends ethereum.Event {
  get params(): Withdrawn__Params {
    return new Withdrawn__Params(this);
  }
}

export class Withdrawn__Params {
  _event: Withdrawn;

  constructor(event: Withdrawn) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawnToken(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get withdrawnValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get balanceToken(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Ledger extends ethereum.SmartContract {
  static bind(address: Address): Ledger {
    return new Ledger("Ledger", address);
  }

  MAX_FEE(): BigInt {
    let result = super.call("MAX_FEE", "MAX_FEE():(uint32)", []);

    return result[0].toBigInt();
  }

  try_MAX_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_FEE", "MAX_FEE():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  burnerAddress(): Address {
    let result = super.call("burnerAddress", "burnerAddress():(address)", []);

    return result[0].toAddress();
  }

  try_burnerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "burnerAddress",
      "burnerAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  consumerAddress(): Address {
    let result = super.call(
      "consumerAddress",
      "consumerAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_consumerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "consumerAddress",
      "consumerAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  exchangerAddress(): Address {
    let result = super.call(
      "exchangerAddress",
      "exchangerAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_exchangerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "exchangerAddress",
      "exchangerAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeAccount(): Address {
    let result = super.call("feeAccount", "feeAccount():(address)", []);

    return result[0].toAddress();
  }

  try_feeAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeAccount", "feeAccount():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  foundationAccount(): Address {
    let result = super.call(
      "foundationAccount",
      "foundationAccount():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_foundationAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "foundationAccount",
      "foundationAccount():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFee(): BigInt {
    let result = super.call("getFee", "getFee():(uint32)", []);

    return result[0].toBigInt();
  }

  try_getFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getFee", "getFee():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeAccount(): Address {
    let result = super.call("getFeeAccount", "getFeeAccount():(address)", []);

    return result[0].toAddress();
  }

  try_getFeeAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFeeAccount",
      "getFeeAccount():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFoundationAccount(): Address {
    let result = super.call(
      "getFoundationAccount",
      "getFoundationAccount():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFoundationAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFoundationAccount",
      "getFoundationAccount():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSettlementAccount(): Address {
    let result = super.call(
      "getSettlementAccount",
      "getSettlementAccount():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getSettlementAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSettlementAccount",
      "getSettlementAccount():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  loyaltyTypeOf(_account: Address): i32 {
    let result = super.call("loyaltyTypeOf", "loyaltyTypeOf(address):(uint8)", [
      ethereum.Value.fromAddress(_account)
    ]);

    return result[0].toI32();
  }

  try_loyaltyTypeOf(_account: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "loyaltyTypeOf",
      "loyaltyTypeOf(address):(uint8)",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  nonceOf(_account: Address): BigInt {
    let result = super.call("nonceOf", "nonceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_account)
    ]);

    return result[0].toBigInt();
  }

  try_nonceOf(_account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonceOf", "nonceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pointBalanceOf(_account: Address): BigInt {
    let result = super.call(
      "pointBalanceOf",
      "pointBalanceOf(address):(uint256)",
      [ethereum.Value.fromAddress(_account)]
    );

    return result[0].toBigInt();
  }

  try_pointBalanceOf(_account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pointBalanceOf",
      "pointBalanceOf(address):(uint256)",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  providerAddress(): Address {
    let result = super.call(
      "providerAddress",
      "providerAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_providerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "providerAddress",
      "providerAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  settlementAccount(): Address {
    let result = super.call(
      "settlementAccount",
      "settlementAccount():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_settlementAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "settlementAccount",
      "settlementAccount():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenBalanceOf(_account: Address): BigInt {
    let result = super.call(
      "tokenBalanceOf",
      "tokenBalanceOf(address):(uint256)",
      [ethereum.Value.fromAddress(_account)]
    );

    return result[0].toBigInt();
  }

  try_tokenBalanceOf(_account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenBalanceOf",
      "tokenBalanceOf(address):(uint256)",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transferAddress(): Address {
    let result = super.call(
      "transferAddress",
      "transferAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_transferAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "transferAddress",
      "transferAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  unPayablePointBalanceOf(_phone: Bytes): BigInt {
    let result = super.call(
      "unPayablePointBalanceOf",
      "unPayablePointBalanceOf(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_phone)]
    );

    return result[0].toBigInt();
  }

  try_unPayablePointBalanceOf(_phone: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "unPayablePointBalanceOf",
      "unPayablePointBalanceOf(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_phone)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddPointBalanceCall extends ethereum.Call {
  get inputs(): AddPointBalanceCall__Inputs {
    return new AddPointBalanceCall__Inputs(this);
  }

  get outputs(): AddPointBalanceCall__Outputs {
    return new AddPointBalanceCall__Outputs(this);
  }
}

export class AddPointBalanceCall__Inputs {
  _call: AddPointBalanceCall;

  constructor(call: AddPointBalanceCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddPointBalanceCall__Outputs {
  _call: AddPointBalanceCall;

  constructor(call: AddPointBalanceCall) {
    this._call = call;
  }
}

export class AddTokenBalanceCall extends ethereum.Call {
  get inputs(): AddTokenBalanceCall__Inputs {
    return new AddTokenBalanceCall__Inputs(this);
  }

  get outputs(): AddTokenBalanceCall__Outputs {
    return new AddTokenBalanceCall__Outputs(this);
  }
}

export class AddTokenBalanceCall__Inputs {
  _call: AddTokenBalanceCall;

  constructor(call: AddTokenBalanceCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddTokenBalanceCall__Outputs {
  _call: AddTokenBalanceCall;

  constructor(call: AddTokenBalanceCall) {
    this._call = call;
  }
}

export class BurnPointCall extends ethereum.Call {
  get inputs(): BurnPointCall__Inputs {
    return new BurnPointCall__Inputs(this);
  }

  get outputs(): BurnPointCall__Outputs {
    return new BurnPointCall__Outputs(this);
  }
}

export class BurnPointCall__Inputs {
  _call: BurnPointCall;

  constructor(call: BurnPointCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnPointCall__Outputs {
  _call: BurnPointCall;

  constructor(call: BurnPointCall) {
    this._call = call;
  }
}

export class BurnUnPayablePointCall extends ethereum.Call {
  get inputs(): BurnUnPayablePointCall__Inputs {
    return new BurnUnPayablePointCall__Inputs(this);
  }

  get outputs(): BurnUnPayablePointCall__Outputs {
    return new BurnUnPayablePointCall__Outputs(this);
  }
}

export class BurnUnPayablePointCall__Inputs {
  _call: BurnUnPayablePointCall;

  constructor(call: BurnUnPayablePointCall) {
    this._call = call;
  }

  get _phone(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnUnPayablePointCall__Outputs {
  _call: BurnUnPayablePointCall;

  constructor(call: BurnUnPayablePointCall) {
    this._call = call;
  }
}

export class ChangeToLoyaltyTokenCall extends ethereum.Call {
  get inputs(): ChangeToLoyaltyTokenCall__Inputs {
    return new ChangeToLoyaltyTokenCall__Inputs(this);
  }

  get outputs(): ChangeToLoyaltyTokenCall__Outputs {
    return new ChangeToLoyaltyTokenCall__Outputs(this);
  }
}

export class ChangeToLoyaltyTokenCall__Inputs {
  _call: ChangeToLoyaltyTokenCall;

  constructor(call: ChangeToLoyaltyTokenCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeToLoyaltyTokenCall__Outputs {
  _call: ChangeToLoyaltyTokenCall;

  constructor(call: ChangeToLoyaltyTokenCall) {
    this._call = call;
  }
}

export class ChangeToPayablePointCall extends ethereum.Call {
  get inputs(): ChangeToPayablePointCall__Inputs {
    return new ChangeToPayablePointCall__Inputs(this);
  }

  get outputs(): ChangeToPayablePointCall__Outputs {
    return new ChangeToPayablePointCall__Outputs(this);
  }
}

export class ChangeToPayablePointCall__Inputs {
  _call: ChangeToPayablePointCall;

  constructor(call: ChangeToPayablePointCall) {
    this._call = call;
  }

  get _phone(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangeToPayablePointCall__Outputs {
  _call: ChangeToPayablePointCall;

  constructor(call: ChangeToPayablePointCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class IncreaseNonceCall extends ethereum.Call {
  get inputs(): IncreaseNonceCall__Inputs {
    return new IncreaseNonceCall__Inputs(this);
  }

  get outputs(): IncreaseNonceCall__Outputs {
    return new IncreaseNonceCall__Outputs(this);
  }
}

export class IncreaseNonceCall__Inputs {
  _call: IncreaseNonceCall;

  constructor(call: IncreaseNonceCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class IncreaseNonceCall__Outputs {
  _call: IncreaseNonceCall;

  constructor(call: IncreaseNonceCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _foundationAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _settlementAccount(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeAccount(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _linkAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _currencyRateAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _providerAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _consumerAddress(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _exchangerAddress(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get _burnerAddress(): Address {
    return this._call.inputValues[9].value.toAddress();
  }

  get _transferAddress(): Address {
    return this._call.inputValues[10].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ProvidePointCall extends ethereum.Call {
  get inputs(): ProvidePointCall__Inputs {
    return new ProvidePointCall__Inputs(this);
  }

  get outputs(): ProvidePointCall__Outputs {
    return new ProvidePointCall__Outputs(this);
  }
}

export class ProvidePointCall__Inputs {
  _call: ProvidePointCall;

  constructor(call: ProvidePointCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _loyaltyPoint(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _loyaltyValue(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _currency(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _purchaseId(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _shopId(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _sender(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ProvidePointCall__Outputs {
  _call: ProvidePointCall;

  constructor(call: ProvidePointCall) {
    this._call = call;
  }
}

export class ProvideTokenCall extends ethereum.Call {
  get inputs(): ProvideTokenCall__Inputs {
    return new ProvideTokenCall__Inputs(this);
  }

  get outputs(): ProvideTokenCall__Outputs {
    return new ProvideTokenCall__Outputs(this);
  }
}

export class ProvideTokenCall__Inputs {
  _call: ProvideTokenCall;

  constructor(call: ProvideTokenCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _loyaltyPoint(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _loyaltyValue(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _currency(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _purchaseId(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _shopId(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _sender(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ProvideTokenCall__Outputs {
  _call: ProvideTokenCall;

  constructor(call: ProvideTokenCall) {
    this._call = call;
  }
}

export class ProvideUnPayablePointCall extends ethereum.Call {
  get inputs(): ProvideUnPayablePointCall__Inputs {
    return new ProvideUnPayablePointCall__Inputs(this);
  }

  get outputs(): ProvideUnPayablePointCall__Outputs {
    return new ProvideUnPayablePointCall__Outputs(this);
  }
}

export class ProvideUnPayablePointCall__Inputs {
  _call: ProvideUnPayablePointCall;

  constructor(call: ProvideUnPayablePointCall) {
    this._call = call;
  }

  get _phone(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _loyaltyPoint(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _loyaltyValue(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _currency(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _purchaseId(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _shopId(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _sender(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ProvideUnPayablePointCall__Outputs {
  _call: ProvideUnPayablePointCall;

  constructor(call: ProvideUnPayablePointCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFeeCall extends ethereum.Call {
  get inputs(): SetFeeCall__Inputs {
    return new SetFeeCall__Inputs(this);
  }

  get outputs(): SetFeeCall__Outputs {
    return new SetFeeCall__Outputs(this);
  }
}

export class SetFeeCall__Inputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeeCall__Outputs {
  _call: SetFeeCall;

  constructor(call: SetFeeCall) {
    this._call = call;
  }
}

export class SubPointBalanceCall extends ethereum.Call {
  get inputs(): SubPointBalanceCall__Inputs {
    return new SubPointBalanceCall__Inputs(this);
  }

  get outputs(): SubPointBalanceCall__Outputs {
    return new SubPointBalanceCall__Outputs(this);
  }
}

export class SubPointBalanceCall__Inputs {
  _call: SubPointBalanceCall;

  constructor(call: SubPointBalanceCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubPointBalanceCall__Outputs {
  _call: SubPointBalanceCall;

  constructor(call: SubPointBalanceCall) {
    this._call = call;
  }
}

export class SubTokenBalanceCall extends ethereum.Call {
  get inputs(): SubTokenBalanceCall__Inputs {
    return new SubTokenBalanceCall__Inputs(this);
  }

  get outputs(): SubTokenBalanceCall__Outputs {
    return new SubTokenBalanceCall__Outputs(this);
  }
}

export class SubTokenBalanceCall__Inputs {
  _call: SubTokenBalanceCall;

  constructor(call: SubTokenBalanceCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SubTokenBalanceCall__Outputs {
  _call: SubTokenBalanceCall;

  constructor(call: SubTokenBalanceCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferTokenCall extends ethereum.Call {
  get inputs(): TransferTokenCall__Inputs {
    return new TransferTokenCall__Inputs(this);
  }

  get outputs(): TransferTokenCall__Outputs {
    return new TransferTokenCall__Outputs(this);
  }
}

export class TransferTokenCall__Inputs {
  _call: TransferTokenCall;

  constructor(call: TransferTokenCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferTokenCall__Outputs {
  _call: TransferTokenCall;

  constructor(call: TransferTokenCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
