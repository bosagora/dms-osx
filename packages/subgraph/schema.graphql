type ChangedToPayablePoint @entity(immutable: true) {
  id: Bytes!
  phone: Bytes! # bytes32
  account: Bytes! # address
  changedAmountPoint: BigInt! # uint256
  value: BigInt! # uint256
  balancePoint: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposited @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  depositAmount: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaidPoint @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  paidAmountPoint: BigInt! # uint256
  value: BigInt! # uint256
  balancePoint: BigInt! # uint256
  purchaseId: String! # string
  purchaseAmount: BigInt! # uint256
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaidToken @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  paidAmountToken: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  purchaseId: String! # string
  purchaseAmount: BigInt! # uint256
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProvidedPoint @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  providedAmountPoint: BigInt! # uint256
  value: BigInt! # uint256
  balancePoint: BigInt! # uint256
  purchaseId: String! # string
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProvidedToken @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  providedAmountToken: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  purchaseId: String! # string
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProvidedTokenForSettlement @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  shopId: String! # string
  providedAmountPoint: BigInt! # uint256
  providedAmountToken: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  purchaseId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProvidedUnPayablePoint @entity(immutable: true) {
  id: Bytes!
  phone: Bytes! # bytes32
  providedAmountPoint: BigInt! # uint256
  value: BigInt! # uint256
  balancePoint: BigInt! # uint256
  purchaseId: String! # string
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SavedPurchase @entity(immutable: true) {
  id: Bytes!
  purchaseId: String! # string
  timestamp: BigInt! # uint256
  amount: BigInt! # uint256
  currency: String! # string
  shopId: String! # string
  method: BigInt! # uint32
  account: Bytes! # address
  phone: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawn @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  withdrawAmount: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

enum UserAction {
  ProvidedPoint,
  ProvidedToken,
  PaidPoint,
  PaidToken,
  DepositedToken,
  WithdrawnToken,
  SettledPoint
}

enum AssetFlow {
  PointInput,
  PointOutput,
  TokenInput,
  TokenOutput,
  None
}

type UserTradeHistory @entity(immutable: true) {
  id: Bytes!
  account: Bytes!
  action: UserAction!
  assetFlow: AssetFlow!
  amountPoint: BigInt!
  amountToken: BigInt!
  value: BigInt!
  balancePoint: BigInt!
  balanceToken: BigInt!
  purchaseId: String
  shopId : String
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserUnPayableTradeHistory @entity(immutable: true) {
  id: Bytes!
  phone: Bytes!
  action: UserAction!
  assetFlow: AssetFlow!
  amount: BigInt!
  balance: BigInt!
  purchaseId: String
  shopId : String
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserBalance @entity {
  id: ID! # account

  point: BigInt!
  token: BigInt!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

enum ShopAction {
  ProvidedPoint,
  UsedPoint,
  SettledPoint
}

type ShopTradeHistory @entity(immutable: true) {
  id: Bytes!
  shopId: String! # string
  purchaseId: String

  action: ShopAction!

  increase: BigInt! # uint256

  providedPoint: BigInt!
  usedPoint: BigInt!
  settledPoint: BigInt!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Shop @entity {
  id: ID! # shopId

  provideWaitTime: BigInt! # uint256
  providePercent: BigInt! # uint256
  phone: Bytes! # bytes32

  providedPoint: BigInt!
  usedPoint: BigInt!
  settledPoint: BigInt!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
