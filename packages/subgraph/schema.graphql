type SavedPurchase @entity(immutable: true) {
  id: Bytes!
  purchaseId: String! # string
  timestamp: BigInt! # uint256
  amount: BigInt! # uint256
  email: Bytes! # bytes32
  shopId: String! # string
  method: BigInt! # uint32
  currency: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposited @entity(immutable: true) {
  id: Bytes!
  email: Bytes! # bytes32
  depositAmount: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaidPoint @entity(immutable: true) {
  id: Bytes!
  email: Bytes! # bytes32
  paidAmountPoint: BigInt! # uint256
  value: BigInt! # uint256
  balancePoint: BigInt! # uint256
  purchaseId: String! # string
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaidToken @entity(immutable: true) {
  id: Bytes!
  email: Bytes! # bytes32
  paidAmountToken: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  purchaseId: String! # string
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProvidedPoint @entity(immutable: true) {
  id: Bytes!
  email: Bytes! # bytes32
  providedAmountPoint: BigInt! # uint256
  value: BigInt! # uint256
  balancePoint: BigInt! # uint256
  purchaseId: String! # string
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProvidedPointToShop @entity(immutable: true) {
  id: Bytes!
  email: Bytes! # bytes32
  providedAmountPoint: BigInt! # uint256
  value: BigInt! # uint256
  balancePoint: BigInt! # uint256
  purchaseId: String! # string
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProvidedToken @entity(immutable: true) {
  id: Bytes!
  email: Bytes! # bytes32
  providedAmountToken: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  purchaseId: String! # string
  shopId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawn @entity(immutable: true) {
  id: Bytes!
  email: Bytes! # bytes32
  withdrawAmount: BigInt! # uint256
  value: BigInt! # uint256
  balanceToken: BigInt! # uint256
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

enum UserAction {
  ProvidedPoint,
  ProvidedToken,
  PaidPoint,
  PaidToken,
  DepositedToken,
  WithdrawnToken,
  ClearedPoint
}

enum AssetFlow {
  PointInput,
  PointOutput,
  TokenInput,
  TokenOutput,
  None
}

type UserTradeHistory @entity(immutable: true) {
  id: Bytes!
  email: Bytes!
  action: UserAction!
  assetFlow: AssetFlow!
  amountPoint: BigInt!
  amountToken: BigInt!
  value: BigInt!
  balancePoint: BigInt!
  balanceToken: BigInt!
  purchaseId: String
  shopId : String
  account: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserBalance @entity {
  id: ID! # email

  point: BigInt!
  token: BigInt!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

enum ShopAction {
  ProvidedPoint,
  UsedPoint,
  ClearedPoint
}

type ShopTradeHistory @entity(immutable: true) {
  id: Bytes!
  shopId: String! # string
  purchaseId: String

  action: ShopAction!

  increase: BigInt! # uint256

  providedPoint: BigInt!
  usedPoint: BigInt!
  clearedPoint: BigInt!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Shop @entity {
  id: ID! # shopId

  provideWaitTime: BigInt! # uint256
  providePercent: BigInt! # uint256
  email: Bytes! # bytes32

  providedPoint: BigInt!
  usedPoint: BigInt!
  clearedPoint: BigInt!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
