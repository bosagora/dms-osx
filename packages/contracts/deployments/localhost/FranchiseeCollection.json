{
  "address": "0x52bB9258733086243Ad1a4A818945F94BCAd05B9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "franchiseeId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "email",
          "type": "bytes32"
        }
      ],
      "name": "Added",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "franchiseeId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increase",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        }
      ],
      "name": "IncreasedClearedMileage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "franchiseeId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increase",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        }
      ],
      "name": "IncreasedProvidedMileage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "franchiseeId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increase",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        }
      ],
      "name": "IncreasedUsedMileage",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NULL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_payoutWaitTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_email",
          "type": "bytes32"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addClearedMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addProvidedMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addUsedMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_idx",
          "type": "uint256"
        }
      ],
      "name": "franchiseeIdOf",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        }
      ],
      "name": "franchiseeOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "franchiseeId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "payoutWaitTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "email",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "providedMileage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "usedMileage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "clearedMileage",
              "type": "uint256"
            },
            {
              "internalType": "enum FranchiseeCollection.FranchiseeStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct FranchiseeCollection.FranchiseeData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "franchiseesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        }
      ],
      "name": "getClearMileage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ledgerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ledgerAddress",
          "type": "address"
        }
      ],
      "name": "setLedgerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x232d2839ac10a6050fd813db92cfa139157cd3ccead671be0c4c5ef22b601ce7",
  "receipt": {
    "to": null,
    "from": "0xDc245797409fb79446523Fa1A4ca97294eef22EE",
    "contractAddress": "0x52bB9258733086243Ad1a4A818945F94BCAd05B9",
    "transactionIndex": 0,
    "gasUsed": "1175477",
    "logsBloom": "0x
    "blockHash": "0x80f1b4fa17e02233b5f77dd823d52ec465613bb8921d6edb9fe163fbaf16669b",
    "transactionHash": "0x232d2839ac10a6050fd813db92cfa139157cd3ccead671be0c4c5ef22b601ce7",
    "logs": [],
    "blockNumber": 704,
    "cumulativeGasUsed": "1175477",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3D6B7A5C7e471C53B5146CdBEFd59ffaA03138Ee"
  ],
  "numDeployments": 1,
  "solcInputHash": "7ccf1a4a5c4293366ab888224207d7f7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"email\",\"type\":\"bytes32\"}],\"name\":\"Added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"IncreasedClearedMileage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"IncreasedProvidedMileage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"IncreasedUsedMileage\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NULL\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_payoutWaitTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_email\",\"type\":\"bytes32\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addClearedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addProvidedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addUsedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"franchiseeIdOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"}],\"name\":\"franchiseeOf\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"payoutWaitTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"email\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"providedMileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usedMileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clearedMileage\",\"type\":\"uint256\"},{\"internalType\":\"enum FranchiseeCollection.FranchiseeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct FranchiseeCollection.FranchiseeData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"franchiseesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"}],\"name\":\"getClearMileage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ledgerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ledgerAddress\",\"type\":\"address\"}],\"name\":\"setLedgerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(string,uint256,bytes32)\":{\"params\":{\"_email\":\"\\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\",\"_franchiseeId\":\"\\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\",\"_payoutWaitTime\":\"\\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc9c0\\uae09\\ub420 \\uc2dc\\uac04\"}},\"constructor\":{\"params\":{\"_validatorAddress\":\"\\uac80\\uc99d\\uc790\\uceec\\ub799\\uc158\\uc758 \\uc8fc\\uc18c\"}},\"franchiseeIdOf(uint256)\":{\"params\":{\"_idx\":\"\\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\"}},\"franchiseeOf(string)\":{\"params\":{\"_franchiseeId\":\"\\uac00\\ub9f9\\uc810\\uc758 \\uc544\\uc774\\ub514\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Added(string,uint256,bytes32)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc774 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedClearedMileage(string,uint256,uint256)\":{\"notice\":\"\\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedProvidedMileage(string,uint256,uint256)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedUsedMileage(string,uint256,uint256)\":{\"notice\":\"\\uc0ac\\uc6a9\\uc790\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"}},\"kind\":\"user\",\"methods\":{\"NULL()\":{\"notice\":\"Hash value of a blank string\"},\"add(string,uint256,bytes32)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc744 \\ucd94\\uac00\\ud55c\\ub2e4\"},\"addClearedMileage(string,uint256)\":{\"notice\":\"\\uc815\\uc0b0\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"addProvidedMileage(string,uint256)\":{\"notice\":\"\\uc9c0\\uae09\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"addUsedMileage(string,uint256)\":{\"notice\":\"\\uc0ac\\uc6a9\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"constructor\":{\"notice\":\"\\uc0dd\\uc131\\uc790\"},\"franchiseeIdOf(uint256)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc758 \\uc544\\uc774\\ub514\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\"},\"franchiseeOf(string)\":{\"notice\":\"\\uac00\\ub9f9\\uc810 \\ub370\\uc774\\ud130\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\"},\"franchiseesLength()\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc758 \\uac2f\\uc218\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\"},\"getClearMileage(string)\":{\"notice\":\"\\uc815\\uc0b0\\ub418\\uc5b4\\uc57c \\ud560 \\ub9c8\\uc77c\\uc9c0\\ub9ac\\uc758 \\ub7c9\\uc744 \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\"},\"setLedgerAddress(address)\":{\"notice\":\"\\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc8fc\\uc18c\\ub97c \\ud638\\ucd9c\\ud55c\\ub2e4.\"}},\"notice\":\"\\uac00\\ub9f9\\uc810\\uceec\\ub799\\uc158\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FranchiseeCollection.sol\":\"FranchiseeCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FranchiseeCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ValidatorCollection.sol\\\";\\n\\n/// @notice \\uac00\\ub9f9\\uc810\\uceec\\ub799\\uc158\\ncontract FranchiseeCollection {\\n    /// @notice Hash value of a blank string\\n    bytes32 public constant NULL = 0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\ucf54\\ub4dc\\n    enum FranchiseeStatus {\\n        INVALID,\\n        ACTIVE\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\ub370\\uc774\\ud130\\n    struct FranchiseeData {\\n        string franchiseeId; // \\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\n        uint256 payoutWaitTime; // \\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\uc9c0\\uae09\\uc2dc\\uac04\\n        bytes32 email; // \\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\\n        uint256 providedMileage; // \\uc81c\\uacf5\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        uint256 usedMileage; // \\uc0ac\\uc6a9\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        uint256 clearedMileage; // \\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        FranchiseeStatus status;\\n    }\\n\\n    mapping(string => FranchiseeData) private franchisees;\\n\\n    string[] private items;\\n\\n    address public validatorAddress;\\n    ValidatorCollection private validatorCollection;\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc774 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Added(string franchiseeId, uint256 timestamp, bytes32 email);\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedProvidedMileage(string franchiseeId, uint256 increase, uint256 total);\\n    /// @notice \\uc0ac\\uc6a9\\uc790\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedUsedMileage(string franchiseeId, uint256 increase, uint256 total);\\n    /// @notice \\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedClearedMileage(string franchiseeId, uint256 increase, uint256 total);\\n\\n    address public ledgerAddress;\\n    address public deployer;\\n\\n    /// @notice \\uc0dd\\uc131\\uc790\\n    /// @param _validatorAddress \\uac80\\uc99d\\uc790\\uceec\\ub799\\uc158\\uc758 \\uc8fc\\uc18c\\n    constructor(address _validatorAddress) {\\n        validatorAddress = _validatorAddress;\\n\\n        validatorCollection = ValidatorCollection(_validatorAddress);\\n        ledgerAddress = address(0x00);\\n        deployer = msg.sender;\\n    }\\n\\n    /// @notice \\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc8fc\\uc18c\\ub97c \\ud638\\ucd9c\\ud55c\\ub2e4.\\n    function setLedgerAddress(address _ledgerAddress) public {\\n        require(msg.sender == deployer, \\\"No permissions\\\");\\n        ledgerAddress = _ledgerAddress;\\n        deployer = address(0x00);\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\ub4e4\\ub9cc \\ud638\\ucd9c\\ud560 \\uc218 \\uc788\\ub3c4\\ub85d \\ud574\\uc900\\ub2e4.\\n    modifier onlyValidator(address _account) {\\n        bool isValidator = false;\\n        for (uint256 i = 0; i < validatorCollection.activeItemsLength(); ++i) {\\n            if (_account == validatorCollection.activeItemOf(i)) {\\n                isValidator = true;\\n                break;\\n            }\\n        }\\n        require(isValidator, \\\"Not validator\\\");\\n        _;\\n    }\\n\\n    /// @notice \\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc5d0\\uc11c\\ub9cc \\ud638\\ucd9c\\ub420 \\uc218 \\uc788\\ub3c4\\ub85d \\ud574\\uc900\\ub2e4.\\n    modifier onlyLedger() {\\n        require(msg.sender == ledgerAddress, \\\"Not ledger\\\");\\n        _;\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc744 \\ucd94\\uac00\\ud55c\\ub2e4\\n    /// @param _franchiseeId \\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\n    /// @param _payoutWaitTime \\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc9c0\\uae09\\ub420 \\uc2dc\\uac04\\n    /// @param _email \\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\\n    function add(\\n        string memory _franchiseeId,\\n        uint256 _payoutWaitTime,\\n        bytes32 _email\\n    ) public onlyValidator(msg.sender) {\\n        _add(_franchiseeId, _payoutWaitTime, _email);\\n    }\\n\\n    function _add(string memory _franchiseeId, uint256 _payoutWaitTime, bytes32 _email) internal {\\n        FranchiseeData memory data = FranchiseeData({\\n            franchiseeId: _franchiseeId,\\n            payoutWaitTime: _payoutWaitTime,\\n            email: _email,\\n            providedMileage: 0,\\n            usedMileage: 0,\\n            clearedMileage: 0,\\n            status: FranchiseeStatus.ACTIVE\\n        });\\n        items.push(_franchiseeId);\\n        franchisees[_franchiseeId] = data;\\n\\n        emit Added(_franchiseeId, _payoutWaitTime, _email);\\n    }\\n\\n    /// @notice \\uc9c0\\uae09\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addProvidedMileage(string memory _franchiseeId, uint256 _amount) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.INVALID) {\\n            _add(_franchiseeId, 0, NULL);\\n        }\\n\\n        franchisees[_franchiseeId].providedMileage += _amount;\\n        emit IncreasedProvidedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].providedMileage);\\n    }\\n\\n    /// @notice \\uc0ac\\uc6a9\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addUsedMileage(string memory _franchiseeId, uint256 _amount) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.INVALID) {\\n            _add(_franchiseeId, 0, NULL);\\n        }\\n        franchisees[_franchiseeId].usedMileage += _amount;\\n        emit IncreasedUsedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].usedMileage);\\n    }\\n\\n    /// @notice \\uc815\\uc0b0\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addClearedMileage(string memory _franchiseeId, uint256 _amount) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.INVALID) {\\n            _add(_franchiseeId, 0, NULL);\\n        }\\n        franchisees[_franchiseeId].clearedMileage += _amount;\\n        emit IncreasedClearedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].clearedMileage);\\n    }\\n\\n    /// @notice \\uc815\\uc0b0\\ub418\\uc5b4\\uc57c \\ud560 \\ub9c8\\uc77c\\uc9c0\\ub9ac\\uc758 \\ub7c9\\uc744 \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function getClearMileage(string memory _franchiseeId) public view returns (uint256) {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.ACTIVE) {\\n            FranchiseeData memory data = franchisees[_franchiseeId];\\n            if (data.providedMileage + data.clearedMileage < data.usedMileage) {\\n                return (data.usedMileage - data.providedMileage - data.clearedMileage);\\n            } else {\\n                return 0;\\n            }\\n        } else {\\n            return 0;\\n        }\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810 \\ub370\\uc774\\ud130\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\\n    /// @param _franchiseeId \\uac00\\ub9f9\\uc810\\uc758 \\uc544\\uc774\\ub514\\n    function franchiseeOf(string memory _franchiseeId) public view returns (FranchiseeData memory) {\\n        return franchisees[_franchiseeId];\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\uc544\\uc774\\ub514\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\\n    /// @param _idx \\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\\n    function franchiseeIdOf(uint256 _idx) public view returns (string memory) {\\n        return items[_idx];\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\uac2f\\uc218\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\\n    function franchiseesLength() public view returns (uint256) {\\n        return items.length;\\n    }\\n}\\n\",\"keccak256\":\"0x535d01a54587479df05b733e5e34bdcbf2a51b22fc01eef08cab5303356e0cbe\",\"license\":\"MIT\"},\"contracts/ValidatorCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @notice \\uac80\\uc99d\\uc790\\ub4e4\\uc744 \\uc800\\uc7a5\\ud558\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\\ncontract ValidatorCollection {\\n    uint256 public constant MINIMUM_DEPOSIT_AMOUNT = 50000000000000000000000;\\n\\n    address public tokenAddress;\\n\\n    IERC20 private token;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\ucf54\\ub4dc\\n    enum Status {\\n        INVALID, //  \\ucd08\\uae30\\uac12\\n        ACTIVE, //  \\uac80\\uc99d\\uc790\\uc758 \\uae30\\ub2a5\\uc774 \\ud65c\\uc131\\ud654\\ub428\\n        STOP, //  \\uc608\\uce58\\uae08 \\ubd80\\uc871\\uc73c\\ub85c \\uc815\\uc9c0\\ub41c \\uc0c1\\ud0dc\\n        EXIT //  \\ud0c8\\ud1f4\\ud55c \\uc0c1\\ud0dc\\n    }\\n\\n    struct ValidatorData {\\n        address validator; // \\uac80\\uc99d\\uc790\\uc758 \\uc9c0\\uac11\\uc8fc\\uc18c\\n        uint256 start; // \\uac80\\uc99d\\uc790\\ub85c\\uc11c \\uc5ed\\ud560\\uc744 \\uc218\\ud589\\ud560 \\uc218 \\uc788\\ub294 \\uc2dc\\uc791 \\uc2dc\\uac04\\n        uint256 balance; // \\uac80\\uc99d\\uc790\\uc758 \\uc608\\uce58\\uae08\\n        Status status; // \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\n    }\\n\\n    address[] private items;\\n\\n    address[] private activeItems;\\n\\n    mapping(address => ValidatorData) private validators;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uac00 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Added(address validator, uint256 start, uint256 balance, Status status);\\n    /// @notice \\uc790\\uae08\\uc774 \\uc785\\uae09\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Deposited(address validator, uint256 amount, uint256 balance);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\ub4f1\\ub85d\\uc774 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedRegistration(address requester);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c \\ud0c8\\ud1f4\\uac00 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedExit(address requester, address validator);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc790\\ubc1c\\uc801 \\ud0c8\\ud1f4\\uac00 \\uc644\\ub8cc\\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Exited(address validator);\\n\\n    /// @notice \\uc0dd\\uc131\\uc790\\n    /// @param _validators \\ucd08\\uae30\\uc5d0 \\uc124\\uc815\\ub420 \\uac80\\uc99d\\uc790, \\uc608\\uce58\\uae08\\uc774 \\uc608\\uce58\\ub41c \\ud6c4 \\uadf8 \\uc989\\uc2dc \\ud65c\\uc131\\ud654 \\ub41c\\ub2e4.\\n    constructor(address _tokenAddress, address[] memory _validators) {\\n        tokenAddress = _tokenAddress;\\n        token = IERC20(_tokenAddress);\\n\\n        for (uint256 i = 0; i < _validators.length; ++i) {\\n            ValidatorData memory item = ValidatorData({\\n                validator: _validators[i],\\n                start: block.timestamp,\\n                balance: 0,\\n                status: Status.STOP\\n            });\\n            items.push(_validators[i]);\\n            validators[_validators[i]] = item;\\n\\n            emit Added(item.validator, item.start, item.balance, item.status);\\n        }\\n    }\\n\\n    /// @notice \\uc608\\uce58\\uae08\\uc744 \\ucd94\\uac00\\ub85c \\uc785\\uae09\\ud569\\ub2c8\\ub2e4.\\n    /// @param _amount \\ucd94\\uac00\\ub85c \\uc785\\uae08\\ud560 \\uc608\\uce58 \\uae08\\uc561\\n    function deposit(uint256 _amount) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status != Status.INVALID, \\\"Not validator\\\");\\n        require(item.status != Status.EXIT, \\\"Already exited\\\");\\n\\n        require(_amount <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), _amount);\\n\\n        validators[msg.sender].balance += _amount;\\n\\n        if (validators[msg.sender].balance >= MINIMUM_DEPOSIT_AMOUNT) validators[msg.sender].status = Status.ACTIVE;\\n\\n        emit Deposited(msg.sender, _amount, validators[msg.sender].balance);\\n    }\\n\\n    /// @notice \\uc2e0\\uaddc \\uac80\\uc99d\\uc790 \\ub4f1\\ub85d\\uc744 \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestRegistration() public {\\n        require(validators[msg.sender].status == Status.INVALID, \\\"Already validator\\\");\\n\\n        require(MINIMUM_DEPOSIT_AMOUNT <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), MINIMUM_DEPOSIT_AMOUNT);\\n\\n        ValidatorData memory item = ValidatorData({\\n            validator: msg.sender,\\n            start: block.timestamp + 86500 * 7,\\n            balance: MINIMUM_DEPOSIT_AMOUNT,\\n            status: Status.ACTIVE\\n        });\\n\\n        items.push(msg.sender);\\n        validators[msg.sender] = item;\\n\\n        emit RequestedRegistration(msg.sender);\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c\\ud0c8\\ud1f4\\ub97c \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestExit(address validator) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        require(validators[validator].status != Status.INVALID, \\\"Not validator\\\");\\n        validators[validator].status = Status.EXIT;\\n\\n        if (validators[validator].balance > 0) {\\n            token.transfer(validator, validators[validator].balance);\\n            validators[validator].balance = 0;\\n        }\\n\\n        emit RequestedExit(msg.sender, validator);\\n    }\\n\\n    function makeActiveItems() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        _makeActiveItems();\\n    }\\n\\n    /// @notice \\ub4f1\\ub85d\\ub41c \\uac80\\uc99d\\uc790\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4.\\n    /// @param _idx \\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\\n    function itemOf(uint256 _idx) public view returns (address) {\\n        return items[_idx];\\n    }\\n\\n    /// @notice \\ub4f1\\ub85d\\ub41c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function itemsLength() public view returns (uint256) {\\n        return items.length;\\n    }\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4.\\n    /// @param _idx \\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\\n    function activeItemOf(uint256 _idx) public view returns (address) {\\n        return activeItems[_idx];\\n    }\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function activeItemsLength() public view returns (uint256) {\\n        return activeItems.length;\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\ub370\\uc774\\ud0c0\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    /// @param _account \\uc9c0\\uac11\\uc8fc\\uc18c\\n    function validatorOf(address _account) public view returns (ValidatorData memory) {\\n        return validators[_account];\\n    }\\n\\n    function _makeActiveItems() internal {\\n        while (activeItems.length > 0) activeItems.pop();\\n        for (uint256 i = 0; i < items.length; ++i) {\\n            ValidatorData memory item = validators[items[i]];\\n\\n            if (item.status == Status.ACTIVE && item.start <= block.timestamp) {\\n                activeItems.push(items[i]);\\n            }\\n        }\\n    }\\n\\n    /// @notice \\uc790\\ubc1c\\uc801\\uc73c\\ub85c \\ud0c8\\ud1f4\\ud558\\uae30 \\uc704\\ud574 \\uc0ac\\uc6a9\\ub418\\ub294 \\ud568\\uc218\\uc785\\ub2c8\\ub2e4.\\n    function exit() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        makeActiveItems();\\n        require(activeItems.length > 1, \\\"Last validator\\\");\\n\\n        validators[msg.sender].status = Status.EXIT;\\n\\n        if (validators[msg.sender].balance > 0) {\\n            token.transfer(msg.sender, validators[msg.sender].balance);\\n            validators[msg.sender].balance = 0;\\n        }\\n\\n        emit Exited(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x16a2e160eb9aa9fc10f05e5c0deb7f51ad6ef6fb715a783b954616ec84331177\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516113b83803806113b883398101604081905261002f91610072565b600280546001600160a01b039092166001600160a01b031992831681179091556003805483169091179055600480548216905560058054909116331790556100a0565b600060208284031215610083578081fd5b81516001600160a01b0381168114610099578182fd5b9392505050565b611309806100af6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636c8502601161008c578063ba9e92d111610066578063ba9e92d1146101ab578063d1d20056146101cb578063d5f39488146101d3578063f26be3fc146101db576100df565b80636c85026014610172578063b023e1cc14610185578063ba891f5c14610198576100df565b806345405ed1116100bd57806345405ed11461012c5780634a9c2fcf1461013f5780635d404c6a1461015f576100df565b8063094d497a146100e4578063356bb1ab146101025780633fe4676e14610117575b600080fd5b6100ec6101e3565b6040516100f99190611054565b60405180910390f35b610115610110366004610f39565b6101e9565b005b61011f610329565b6040516100f99190611040565b61011561013a366004610f39565b610338565b61015261014d366004610efe565b610463565b6040516100f9919061113a565b6100ec61016d366004610efe565b6105ae565b610115610180366004610f39565b610798565b610115610193366004610f7c565b6108c3565b6101156101a6366004610ebf565b610a50565b6101be6101b9366004610fc8565b610abb565b6040516100f9919061105d565b61011f610b78565b61011f610b87565b6100ec610b96565b60015490565b6004546001600160a01b0316331461021c5760405162461bcd60e51b815260040161021390611103565b60405180910390fd5b6000808360405161022d9190611024565b9081526040519081900360200190206006015460ff16600181111561026257634e487b7160e01b600052602160045260246000fd5b1415610294576102948260007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bba565b806000836040516102a59190611024565b908152602001604051809103902060040160008282546102c591906111bc565b925050819055507f1d84bae8d1f563d4e131a40d8c645666e1629dc693f0e9efdb8824f86de96a9182826000856040516102ff9190611024565b9081526040519081900360200181206004015461031d939291611070565b60405180910390a15050565b6002546001600160a01b031681565b6004546001600160a01b031633146103625760405162461bcd60e51b815260040161021390611103565b600080836040516103739190611024565b9081526040519081900360200190206006015460ff1660018111156103a857634e487b7160e01b600052602160045260246000fd5b14156103da576103da8260007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bba565b806000836040516103eb9190611024565b9081526020016040518091039020600501600082825461040b91906111bc565b925050819055507f278f87ebfef3375948dc9e7b2f38fc7b8a349f190b4d8223464de7f9d608082882826000856040516104459190611024565b9081526040519081900360200181206005015461031d939291611070565b61046b610d47565b60008260405161047b9190611024565b90815260200160405180910390206040518060e00160405290816000820180546104a49061121b565b80601f01602080910402602001604051908101604052809291908181526020018280546104d09061121b565b801561051d5780601f106104f25761010080835404028352916020019161051d565b820191906000526020600020905b81548152906001019060200180831161050057829003601f168201915b50505091835250506001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c09092019160ff169081111561058457634e487b7160e01b600052602160045260246000fd5b60018111156105a357634e487b7160e01b600052602160045260246000fd5b90525090505b919050565b600060016000836040516105c29190611024565b9081526040519081900360200190206006015460ff1660018111156105f757634e487b7160e01b600052602160045260246000fd5b1415610790576000808360405161060e9190611024565b90815260200160405180910390206040518060e00160405290816000820180546106379061121b565b80601f01602080910402602001604051908101604052809291908181526020018280546106639061121b565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b50505091835250506001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c09092019160ff169081111561071757634e487b7160e01b600052602160045260246000fd5b600181111561073657634e487b7160e01b600052602160045260246000fd5b81525050905080608001518160a00151826060015161075591906111bc565b1015610786578060a001518160600151826080015161077491906111d4565b61077e91906111d4565b9150506105a9565b60009150506105a9565b5060006105a9565b6004546001600160a01b031633146107c25760405162461bcd60e51b815260040161021390611103565b600080836040516107d39190611024565b9081526040519081900360200190206006015460ff16600181111561080857634e487b7160e01b600052602160045260246000fd5b141561083a5761083a8260007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bba565b8060008360405161084b9190611024565b9081526020016040518091039020600301600082825461086b91906111bc565b925050819055507f2a612b699b277ec7ea9851a2fddd295606bce35f368c4583e74254ce7b92d9d582826000856040516108a59190611024565b9081526040519081900360200181206003015461031d939291611070565b336000805b600360009054906101000a90046001600160a01b03166001600160a01b03166377172f0e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190610fe0565b811015610a20576003546040517f7a5e8be90000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637a5e8be99061099e908490600401611054565b60206040518083038186803b1580156109b657600080fd5b505afa1580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee9190610ee2565b6001600160a01b0316836001600160a01b03161415610a105760019150610a20565b610a1981611256565b90506108c8565b5080610a3e5760405162461bcd60e51b815260040161021390611095565b610a49858585610bba565b5050505050565b6005546001600160a01b03163314610a7a5760405162461bcd60e51b8152600401610213906110cc565b600480546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600580549091169055565b606060018281548110610ade57634e487b7160e01b600052603260045260246000fd5b906000526020600020018054610af39061121b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1f9061121b565b8015610b6c5780601f10610b4157610100808354040283529160200191610b6c565b820191906000526020600020905b815481529060010190602001808311610b4f57829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b6005546001600160a01b031681565b7fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b85581565b60006040518060e00160405280858152602001848152602001838152602001600081526020016000815260200160008152602001600180811115610c0e57634e487b7160e01b600052602160045260246000fd5b90526001805480820182556000919091528551919250610c57917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101906020870190610da5565b5080600085604051610c699190611024565b90815260200160405180910390206000820151816000019080519060200190610c93929190610da5565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836001811115610cfe57634e487b7160e01b600052602160045260246000fd5b02179055509050507f4830c66baef6ebbd1ea845dea5eacc38b4955bfcd724b9c8a3a1bd618175157b848484604051610d3993929190611070565b60405180910390a150505050565b6040518060e0016040528060608152602001600081526020016000801916815260200160008152602001600081526020016000815260200160006001811115610da057634e487b7160e01b600052602160045260246000fd5b905290565b828054610db19061121b565b90600052602060002090601f016020900481019282610dd35760008555610e19565b82601f10610dec57805160ff1916838001178555610e19565b82800160010185558215610e19579182015b82811115610e19578251825591602001919060010190610dfe565b50610e25929150610e29565b5090565b5b80821115610e255760008155600101610e2a565b600082601f830112610e4e578081fd5b813567ffffffffffffffff80821115610e6957610e696112a5565b6040516020601f19601f8501168201018181108382111715610e8d57610e8d6112a5565b604052828152848301602001861015610ea4578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610ed0578081fd5b8135610edb816112bb565b9392505050565b600060208284031215610ef3578081fd5b8151610edb816112bb565b600060208284031215610f0f578081fd5b813567ffffffffffffffff811115610f25578182fd5b610f3184828501610e3e565b949350505050565b60008060408385031215610f4b578081fd5b823567ffffffffffffffff811115610f61578182fd5b610f6d85828601610e3e565b95602094909401359450505050565b600080600060608486031215610f90578081fd5b833567ffffffffffffffff811115610fa6578182fd5b610fb286828701610e3e565b9660208601359650604090950135949350505050565b600060208284031215610fd9578081fd5b5035919050565b600060208284031215610ff1578081fd5b5051919050565b600081518084526110108160208601602086016111eb565b601f01601f19169290920160200192915050565b600082516110368184602087016111eb565b9190910192915050565b6001600160a01b0391909116815260200190565b90815260200190565b600060208252610edb6020830184610ff8565b6000606082526110836060830186610ff8565b60208301949094525060400152919050565b6020808252600d908201527f4e6f742076616c696461746f7200000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f207065726d697373696f6e73000000000000000000000000000000000000604082015260600190565b6020808252600a908201527f4e6f74206c656467657200000000000000000000000000000000000000000000604082015260600190565b600060208252825160e06020840152611157610100840182610ff8565b9050602084015160408401526040840151606084015260608401516080840152608084015160a084015260a084015160c084015260c0840151600281106111ac57634e487b7160e01b83526021600452602483fd5b60e0939093019290925250919050565b600082198211156111cf576111cf61128f565b500190565b6000828210156111e6576111e661128f565b500390565b60005b838110156112065781810151838201526020016111ee565b83811115611215576000848401525b50505050565b60028104600182168061122f57607f821691505b6020821081141561125057634e487b7160e01b600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112885761128861128f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146112d057600080fd5b5056fea264697066735822122047ccc4d2bf436031127288ded93fa31922882339d8e6c0894beb1739afa14f1964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80636c8502601161008c578063ba9e92d111610066578063ba9e92d1146101ab578063d1d20056146101cb578063d5f39488146101d3578063f26be3fc146101db576100df565b80636c85026014610172578063b023e1cc14610185578063ba891f5c14610198576100df565b806345405ed1116100bd57806345405ed11461012c5780634a9c2fcf1461013f5780635d404c6a1461015f576100df565b8063094d497a146100e4578063356bb1ab146101025780633fe4676e14610117575b600080fd5b6100ec6101e3565b6040516100f99190611054565b60405180910390f35b610115610110366004610f39565b6101e9565b005b61011f610329565b6040516100f99190611040565b61011561013a366004610f39565b610338565b61015261014d366004610efe565b610463565b6040516100f9919061113a565b6100ec61016d366004610efe565b6105ae565b610115610180366004610f39565b610798565b610115610193366004610f7c565b6108c3565b6101156101a6366004610ebf565b610a50565b6101be6101b9366004610fc8565b610abb565b6040516100f9919061105d565b61011f610b78565b61011f610b87565b6100ec610b96565b60015490565b6004546001600160a01b0316331461021c5760405162461bcd60e51b815260040161021390611103565b60405180910390fd5b6000808360405161022d9190611024565b9081526040519081900360200190206006015460ff16600181111561026257634e487b7160e01b600052602160045260246000fd5b1415610294576102948260007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bba565b806000836040516102a59190611024565b908152602001604051809103902060040160008282546102c591906111bc565b925050819055507f1d84bae8d1f563d4e131a40d8c645666e1629dc693f0e9efdb8824f86de96a9182826000856040516102ff9190611024565b9081526040519081900360200181206004015461031d939291611070565b60405180910390a15050565b6002546001600160a01b031681565b6004546001600160a01b031633146103625760405162461bcd60e51b815260040161021390611103565b600080836040516103739190611024565b9081526040519081900360200190206006015460ff1660018111156103a857634e487b7160e01b600052602160045260246000fd5b14156103da576103da8260007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bba565b806000836040516103eb9190611024565b9081526020016040518091039020600501600082825461040b91906111bc565b925050819055507f278f87ebfef3375948dc9e7b2f38fc7b8a349f190b4d8223464de7f9d608082882826000856040516104459190611024565b9081526040519081900360200181206005015461031d939291611070565b61046b610d47565b60008260405161047b9190611024565b90815260200160405180910390206040518060e00160405290816000820180546104a49061121b565b80601f01602080910402602001604051908101604052809291908181526020018280546104d09061121b565b801561051d5780601f106104f25761010080835404028352916020019161051d565b820191906000526020600020905b81548152906001019060200180831161050057829003601f168201915b50505091835250506001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c09092019160ff169081111561058457634e487b7160e01b600052602160045260246000fd5b60018111156105a357634e487b7160e01b600052602160045260246000fd5b90525090505b919050565b600060016000836040516105c29190611024565b9081526040519081900360200190206006015460ff1660018111156105f757634e487b7160e01b600052602160045260246000fd5b1415610790576000808360405161060e9190611024565b90815260200160405180910390206040518060e00160405290816000820180546106379061121b565b80601f01602080910402602001604051908101604052809291908181526020018280546106639061121b565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b50505091835250506001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c09092019160ff169081111561071757634e487b7160e01b600052602160045260246000fd5b600181111561073657634e487b7160e01b600052602160045260246000fd5b81525050905080608001518160a00151826060015161075591906111bc565b1015610786578060a001518160600151826080015161077491906111d4565b61077e91906111d4565b9150506105a9565b60009150506105a9565b5060006105a9565b6004546001600160a01b031633146107c25760405162461bcd60e51b815260040161021390611103565b600080836040516107d39190611024565b9081526040519081900360200190206006015460ff16600181111561080857634e487b7160e01b600052602160045260246000fd5b141561083a5761083a8260007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bba565b8060008360405161084b9190611024565b9081526020016040518091039020600301600082825461086b91906111bc565b925050819055507f2a612b699b277ec7ea9851a2fddd295606bce35f368c4583e74254ce7b92d9d582826000856040516108a59190611024565b9081526040519081900360200181206003015461031d939291611070565b336000805b600360009054906101000a90046001600160a01b03166001600160a01b03166377172f0e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190610fe0565b811015610a20576003546040517f7a5e8be90000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637a5e8be99061099e908490600401611054565b60206040518083038186803b1580156109b657600080fd5b505afa1580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee9190610ee2565b6001600160a01b0316836001600160a01b03161415610a105760019150610a20565b610a1981611256565b90506108c8565b5080610a3e5760405162461bcd60e51b815260040161021390611095565b610a49858585610bba565b5050505050565b6005546001600160a01b03163314610a7a5760405162461bcd60e51b8152600401610213906110cc565b600480546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600580549091169055565b606060018281548110610ade57634e487b7160e01b600052603260045260246000fd5b906000526020600020018054610af39061121b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1f9061121b565b8015610b6c5780601f10610b4157610100808354040283529160200191610b6c565b820191906000526020600020905b815481529060010190602001808311610b4f57829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b6005546001600160a01b031681565b7fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b85581565b60006040518060e00160405280858152602001848152602001838152602001600081526020016000815260200160008152602001600180811115610c0e57634e487b7160e01b600052602160045260246000fd5b90526001805480820182556000919091528551919250610c57917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101906020870190610da5565b5080600085604051610c699190611024565b90815260200160405180910390206000820151816000019080519060200190610c93929190610da5565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836001811115610cfe57634e487b7160e01b600052602160045260246000fd5b02179055509050507f4830c66baef6ebbd1ea845dea5eacc38b4955bfcd724b9c8a3a1bd618175157b848484604051610d3993929190611070565b60405180910390a150505050565b6040518060e0016040528060608152602001600081526020016000801916815260200160008152602001600081526020016000815260200160006001811115610da057634e487b7160e01b600052602160045260246000fd5b905290565b828054610db19061121b565b90600052602060002090601f016020900481019282610dd35760008555610e19565b82601f10610dec57805160ff1916838001178555610e19565b82800160010185558215610e19579182015b82811115610e19578251825591602001919060010190610dfe565b50610e25929150610e29565b5090565b5b80821115610e255760008155600101610e2a565b600082601f830112610e4e578081fd5b813567ffffffffffffffff80821115610e6957610e696112a5565b6040516020601f19601f8501168201018181108382111715610e8d57610e8d6112a5565b604052828152848301602001861015610ea4578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610ed0578081fd5b8135610edb816112bb565b9392505050565b600060208284031215610ef3578081fd5b8151610edb816112bb565b600060208284031215610f0f578081fd5b813567ffffffffffffffff811115610f25578182fd5b610f3184828501610e3e565b949350505050565b60008060408385031215610f4b578081fd5b823567ffffffffffffffff811115610f61578182fd5b610f6d85828601610e3e565b95602094909401359450505050565b600080600060608486031215610f90578081fd5b833567ffffffffffffffff811115610fa6578182fd5b610fb286828701610e3e565b9660208601359650604090950135949350505050565b600060208284031215610fd9578081fd5b5035919050565b600060208284031215610ff1578081fd5b5051919050565b600081518084526110108160208601602086016111eb565b601f01601f19169290920160200192915050565b600082516110368184602087016111eb565b9190910192915050565b6001600160a01b0391909116815260200190565b90815260200190565b600060208252610edb6020830184610ff8565b6000606082526110836060830186610ff8565b60208301949094525060400152919050565b6020808252600d908201527f4e6f742076616c696461746f7200000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f207065726d697373696f6e73000000000000000000000000000000000000604082015260600190565b6020808252600a908201527f4e6f74206c656467657200000000000000000000000000000000000000000000604082015260600190565b600060208252825160e06020840152611157610100840182610ff8565b9050602084015160408401526040840151606084015260608401516080840152608084015160a084015260a084015160c084015260c0840151600281106111ac57634e487b7160e01b83526021600452602483fd5b60e0939093019290925250919050565b600082198211156111cf576111cf61128f565b500190565b6000828210156111e6576111e661128f565b500390565b60005b838110156112065781810151838201526020016111ee565b83811115611215576000848401525b50505050565b60028104600182168061122f57607f821691505b6020821081141561125057634e487b7160e01b600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112885761128861128f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146112d057600080fd5b5056fea264697066735822122047ccc4d2bf436031127288ded93fa31922882339d8e6c0894beb1739afa14f1964736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "add(string,uint256,bytes32)": {
        "params": {
          "_email": "가맹점주 이메일 해시",
          "_franchiseeId": "가맹점 아이디",
          "_payoutWaitTime": "제품구매 후 마일리지가 지급될 시간"
        }
      },
      "constructor": {
        "params": {
          "_validatorAddress": "검증자컬랙션의 주소"
        }
      },
      "franchiseeIdOf(uint256)": {
        "params": {
          "_idx": "배열의 순번"
        }
      },
      "franchiseeOf(string)": {
        "params": {
          "_franchiseeId": "가맹점의 아이디"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Added(string,uint256,bytes32)": {
        "notice": "가맹점이 추가될 때 발생되는 이벤트"
      },
      "IncreasedClearedMileage(string,uint256,uint256)": {
        "notice": "정산된 마일리가 증가할 때 발생되는 이벤트"
      },
      "IncreasedProvidedMileage(string,uint256,uint256)": {
        "notice": "가맹점의 마일리지가 증가할 때 발생되는 이벤트"
      },
      "IncreasedUsedMileage(string,uint256,uint256)": {
        "notice": "사용자의 마일리지가 증가할 때 발생되는 이벤트"
      }
    },
    "kind": "user",
    "methods": {
      "NULL()": {
        "notice": "Hash value of a blank string"
      },
      "add(string,uint256,bytes32)": {
        "notice": "가맹점을 추가한다"
      },
      "addClearedMileage(string,uint256)": {
        "notice": "정산된 총 마일지리를 누적한다"
      },
      "addProvidedMileage(string,uint256)": {
        "notice": "지급된 총 마일지리를 누적한다"
      },
      "addUsedMileage(string,uint256)": {
        "notice": "사용된 총 마일지리를 누적한다"
      },
      "constructor": {
        "notice": "생성자"
      },
      "franchiseeIdOf(uint256)": {
        "notice": "가맹점의 아이디를 리턴한다"
      },
      "franchiseeOf(string)": {
        "notice": "가맹점 데이터를 리턴한다"
      },
      "franchiseesLength()": {
        "notice": "가맹점의 갯수를 리턴한다"
      },
      "getClearMileage(string)": {
        "notice": "정산되어야 할 마일지리의 량을 리턴합니다."
      },
      "setLedgerAddress(address)": {
        "notice": "원장 컨트랙트의 주소를 호출한다."
      }
    },
    "notice": "가맹점컬랙션",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2122,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "franchisees",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(FranchiseeData)2117_storage)"
      },
      {
        "astId": 2125,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "items",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 2127,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "validatorAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2130,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "validatorCollection",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ValidatorCollection)4586"
      },
      {
        "astId": 2168,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "ledgerAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 2170,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "deployer",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ValidatorCollection)4586": {
        "encoding": "inplace",
        "label": "contract ValidatorCollection",
        "numberOfBytes": "20"
      },
      "t_enum(FranchiseeStatus)2101": {
        "encoding": "inplace",
        "label": "enum FranchiseeCollection.FranchiseeStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_struct(FranchiseeData)2117_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct FranchiseeCollection.FranchiseeData)",
        "numberOfBytes": "32",
        "value": "t_struct(FranchiseeData)2117_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(FranchiseeData)2117_storage": {
        "encoding": "inplace",
        "label": "struct FranchiseeCollection.FranchiseeData",
        "members": [
          {
            "astId": 2103,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "franchiseeId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2105,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "payoutWaitTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2107,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "email",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 2109,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "providedMileage",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2111,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "usedMileage",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 2113,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "clearedMileage",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 2116,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "status",
            "offset": 0,
            "slot": "6",
            "type": "t_enum(FranchiseeStatus)2101"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}