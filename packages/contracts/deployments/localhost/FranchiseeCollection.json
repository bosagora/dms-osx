{
    "address": "0xD9d2A3fA6A93EC688831969C286B91524735aa35",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_validatorAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "franchiseeId",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "email",
                    "type": "bytes32"
                }
            ],
            "name": "Added",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "franchiseeId",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "increase",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "total",
                    "type": "uint256"
                }
            ],
            "name": "IncreasedClearedMileage",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "franchiseeId",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "increase",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "total",
                    "type": "uint256"
                }
            ],
            "name": "IncreasedProvidedMileage",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "franchiseeId",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "increase",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "total",
                    "type": "uint256"
                }
            ],
            "name": "IncreasedUsedMileage",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_franchiseeId",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_payoutWaitTime",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "_email",
                    "type": "bytes32"
                }
            ],
            "name": "add",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_franchiseeId",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "addClearedMileage",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_franchiseeId",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "addProvidedMileage",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_franchiseeId",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "addUsedMileage",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "deployer",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "franchisees",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "franchiseeId",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "payoutWaitTime",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "email",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "providedMileage",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "usedMileage",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "clearedMileage",
                    "type": "uint256"
                },
                {
                    "internalType": "enum FranchiseeCollection.FranchiseeStatus",
                    "name": "status",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_franchiseeId",
                    "type": "string"
                }
            ],
            "name": "getClearMileage",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_franchiseeId",
                    "type": "string"
                }
            ],
            "name": "getItem",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "franchiseeId",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "payoutWaitTime",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "email",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "providedMileage",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "usedMileage",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "clearedMileage",
                            "type": "uint256"
                        },
                        {
                            "internalType": "enum FranchiseeCollection.FranchiseeStatus",
                            "name": "status",
                            "type": "uint8"
                        }
                    ],
                    "internalType": "struct FranchiseeCollection.FranchiseeData",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "items",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "ledgerAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "length",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_ledgerAddress",
                    "type": "address"
                }
            ],
            "name": "setLedgerAddress",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "validatorAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "transactionHash": "0xadebd188991b42367de0918a74bf2f4f466ee0ede878fa13467120a58197121a",
    "receipt": {
        "to": null,
        "from": "0xDc245797409fb79446523Fa1A4ca97294eef22EE",
        "contractAddress": "0xD9d2A3fA6A93EC688831969C286B91524735aa35",
        "transactionIndex": 0,
        "gasUsed": "1203548",
        "logsBloom": "0x
        "blockHash": "0xb23a1109746dcc765168c1d6a0372496e2139aa7b37a472f11475b8c424556fd",
        "transactionHash": "0xadebd188991b42367de0918a74bf2f4f466ee0ede878fa13467120a58197121a",
        "logs": [],
        "blockNumber": 89,
        "cumulativeGasUsed": "1203548",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x979a62090BDCff36F2e140F6915fbAdA7510cb6a"],
    "numDeployments": 1,
    "solcInputHash": "a7b1b71c1f5d4e04a8f1a0f0fa51eebb",
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"email\",\"type\":\"bytes32\"}],\"name\":\"Added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"IncreasedClearedMileage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"IncreasedProvidedMileage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"IncreasedUsedMileage\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_payoutWaitTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_email\",\"type\":\"bytes32\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addClearedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addProvidedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addUsedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"franchisees\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"payoutWaitTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"email\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"providedMileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usedMileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clearedMileage\",\"type\":\"uint256\"},{\"internalType\":\"enum FranchiseeCollection.FranchiseeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"}],\"name\":\"getClearMileage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"}],\"name\":\"getItem\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"payoutWaitTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"email\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"providedMileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usedMileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clearedMileage\",\"type\":\"uint256\"},{\"internalType\":\"enum FranchiseeCollection.FranchiseeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct FranchiseeCollection.FranchiseeData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ledgerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ledgerAddress\",\"type\":\"address\"}],\"name\":\"setLedgerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(string,uint256,bytes32)\":{\"params\":{\"_email\":\"\\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\",\"_franchiseeId\":\"\\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\",\"_payoutWaitTime\":\"\\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc9c0\\uae09\\ub420 \\uc2dc\\uac04\"}},\"constructor\":{\"params\":{\"_validatorAddress\":\"\\uac80\\uc99d\\uc790\\uceec\\ub799\\uc158\\uc758 \\uc8fc\\uc18c\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Added(string,uint256,bytes32)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc774 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedClearedMileage(string,uint256,uint256)\":{\"notice\":\"\\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedProvidedMileage(string,uint256,uint256)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedUsedMileage(string,uint256,uint256)\":{\"notice\":\"\\uc0ac\\uc6a9\\uc790\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"}},\"kind\":\"user\",\"methods\":{\"add(string,uint256,bytes32)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc744 \\ucd94\\uac00\\ud55c\\ub2e4\"},\"addClearedMileage(string,uint256)\":{\"notice\":\"\\uc815\\uc0b0\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"addProvidedMileage(string,uint256)\":{\"notice\":\"\\uc9c0\\uae09\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"addUsedMileage(string,uint256)\":{\"notice\":\"\\uc0ac\\uc6a9\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"constructor\":{\"notice\":\"\\uc0dd\\uc131\\uc790\"},\"franchisees(string)\":{\"notice\":\"\\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\uc5d0 \\ud574\\ub2f9\\ud558\\ub294 \\uac00\\ub9f9\\uc810 \\ub370\\uc774\\ud130\\uac00 \\uc800\\uc7a5\\ub418\\ub294 \\ub9f5\"},\"getClearMileage(string)\":{\"notice\":\"\\uc815\\uc0b0\\ub418\\uc5b4\\uc57c \\ud560 \\ub9c8\\uc77c\\uc9c0\\ub9ac\\uc758 \\ub7c9\\uc744 \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\"},\"getItem(string)\":{\"notice\":\"\\uac00\\ub9f9\\uc810 \\ub370\\uc544\\ud130\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\"},\"items(uint256)\":{\"notice\":\"\\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\uac00 \\uc800\\uc7a5\\ub41c \\ubc30\\uc5f4\"},\"length()\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc758 \\uac2f\\uc218\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\"},\"setLedgerAddress(address)\":{\"notice\":\"\\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc8fc\\uc18c\\ub97c \\ud638\\ucd9c\\ud55c\\ub2e4.\"}},\"notice\":\"\\uac00\\ub9f9\\uc810\\uceec\\ub799\\uc158\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FranchiseeCollection.sol\":\"FranchiseeCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FranchiseeCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ValidatorCollection.sol\\\";\\n\\n/// @notice \\uac00\\ub9f9\\uc810\\uceec\\ub799\\uc158\\ncontract FranchiseeCollection {\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\ucf54\\ub4dc\\n    enum FranchiseeStatus {\\n        INVALID,\\n        ACTIVE\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\ub370\\uc774\\ud130\\n    struct FranchiseeData {\\n        string franchiseeId; // \\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\n        uint256 payoutWaitTime; // \\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\uc9c0\\uae09\\uc2dc\\uac04\\n        bytes32 email; // \\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\\n        uint256 providedMileage; // \\uc81c\\uacf5\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        uint256 usedMileage; // \\uc0ac\\uc6a9\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        uint256 clearedMileage; // \\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        FranchiseeStatus status;\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\uc5d0 \\ud574\\ub2f9\\ud558\\ub294 \\uac00\\ub9f9\\uc810 \\ub370\\uc774\\ud130\\uac00 \\uc800\\uc7a5\\ub418\\ub294 \\ub9f5\\n    mapping(string => FranchiseeData) public franchisees;\\n\\n    /// @notice \\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\uac00 \\uc800\\uc7a5\\ub41c \\ubc30\\uc5f4\\n    string[] public items;\\n\\n    address public validatorAddress;\\n    ValidatorCollection private validatorCollection;\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc774 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Added(string franchiseeId, uint256 timestamp, bytes32 email);\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedProvidedMileage(string franchiseeId, uint256 increase, uint256 total);\\n    /// @notice \\uc0ac\\uc6a9\\uc790\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedUsedMileage(string franchiseeId, uint256 increase, uint256 total);\\n    /// @notice \\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedClearedMileage(string franchiseeId, uint256 increase, uint256 total);\\n\\n    address public ledgerAddress;\\n    address public deployer;\\n\\n    /// @notice \\uc0dd\\uc131\\uc790\\n    /// @param _validatorAddress \\uac80\\uc99d\\uc790\\uceec\\ub799\\uc158\\uc758 \\uc8fc\\uc18c\\n    constructor(address _validatorAddress) {\\n        validatorAddress = _validatorAddress;\\n\\n        validatorCollection = ValidatorCollection(_validatorAddress);\\n        ledgerAddress = address(0x00);\\n        deployer = msg.sender;\\n    }\\n\\n    /// @notice \\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc8fc\\uc18c\\ub97c \\ud638\\ucd9c\\ud55c\\ub2e4.\\n    function setLedgerAddress(address _ledgerAddress) public {\\n        require(msg.sender == deployer, \\\"No permissions\\\");\\n        ledgerAddress = _ledgerAddress;\\n        deployer = address(0x00);\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\ub4e4\\ub9cc \\ud638\\ucd9c\\ud560 \\uc218 \\uc788\\ub3c4\\ub85d \\ud574\\uc900\\ub2e4.\\n    modifier onlyValidator(address _account) {\\n        bool isValidator = false;\\n        for (uint256 i = 0; i < validatorCollection.getActiveItemsLength(); ++i) {\\n            if (_account == validatorCollection.activeItems(i)) {\\n                isValidator = true;\\n                break;\\n            }\\n        }\\n        require(isValidator, \\\"Not validator\\\");\\n        _;\\n    }\\n\\n    /// @notice \\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc5d0\\uc11c\\ub9cc \\ud638\\ucd9c\\ub420 \\uc218 \\uc788\\ub3c4\\ub85d \\ud574\\uc900\\ub2e4.\\n    modifier onlyLedger() {\\n        require(msg.sender == ledgerAddress, \\\"Not ledger\\\");\\n        _;\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc744 \\ucd94\\uac00\\ud55c\\ub2e4\\n    /// @param _franchiseeId \\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\n    /// @param _payoutWaitTime \\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc9c0\\uae09\\ub420 \\uc2dc\\uac04\\n    /// @param _email \\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\\n    function add(\\n        string memory _franchiseeId,\\n        uint256 _payoutWaitTime,\\n        bytes32 _email\\n    ) public onlyValidator(msg.sender) {\\n        FranchiseeData memory data = FranchiseeData({\\n            franchiseeId: _franchiseeId,\\n            payoutWaitTime: _payoutWaitTime,\\n            email: _email,\\n            providedMileage: 0,\\n            usedMileage: 0,\\n            clearedMileage: 0,\\n            status: FranchiseeStatus.ACTIVE\\n        });\\n        items.push(_franchiseeId);\\n        franchisees[_franchiseeId] = data;\\n\\n        emit Added(_franchiseeId, _payoutWaitTime, _email);\\n    }\\n\\n    /// @notice \\uc9c0\\uae09\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addProvidedMileage(string memory _franchiseeId, uint256 _amount) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.ACTIVE) {\\n            franchisees[_franchiseeId].providedMileage += _amount;\\n            emit IncreasedProvidedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].providedMileage);\\n        }\\n    }\\n\\n    /// @notice \\uc0ac\\uc6a9\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addUsedMileage(string memory _franchiseeId, uint256 _amount) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.ACTIVE) {\\n            franchisees[_franchiseeId].usedMileage += _amount;\\n            emit IncreasedUsedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].usedMileage);\\n        }\\n    }\\n\\n    /// @notice \\uc815\\uc0b0\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addClearedMileage(string memory _franchiseeId, uint256 _amount) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.ACTIVE) {\\n            franchisees[_franchiseeId].clearedMileage += _amount;\\n            emit IncreasedClearedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].clearedMileage);\\n        }\\n    }\\n\\n    /// @notice \\uc815\\uc0b0\\ub418\\uc5b4\\uc57c \\ud560 \\ub9c8\\uc77c\\uc9c0\\ub9ac\\uc758 \\ub7c9\\uc744 \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function getClearMileage(string memory _franchiseeId) public view returns (uint256) {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.ACTIVE) {\\n            FranchiseeData memory data = franchisees[_franchiseeId];\\n            if (data.providedMileage + data.clearedMileage < data.usedMileage) {\\n                return (data.usedMileage - data.providedMileage - data.clearedMileage);\\n            } else {\\n                return 0;\\n            }\\n        } else {\\n            return 0;\\n        }\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810 \\ub370\\uc544\\ud130\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\\n    function getItem(string memory _franchiseeId) public view returns (FranchiseeData memory) {\\n        return franchisees[_franchiseeId];\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\uac2f\\uc218\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\\n    function length() public view returns (uint256) {\\n        return items.length;\\n    }\\n}\\n\",\"keccak256\":\"0xff5e464e22a30f39165b097d48970c6f1975bf0e26bf3a4edd2924c7f516080a\",\"license\":\"MIT\"},\"contracts/ValidatorCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @notice \\uac80\\uc99d\\uc790\\ub4e4\\uc744 \\uc800\\uc7a5\\ud558\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\\ncontract ValidatorCollection {\\n    uint256 public constant MINIMUM_DEPOSIT_AMOUNT = 50000000000000000000000;\\n\\n    address private tokenAddress;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\ucf54\\ub4dc\\n    enum Status {\\n        INVALID, //  \\ucd08\\uae30\\uac12\\n        ACTIVE, //  \\uac80\\uc99d\\uc790\\uc758 \\uae30\\ub2a5\\uc774 \\ud65c\\uc131\\ud654\\ub428\\n        STOP, //  \\uc608\\uce58\\uae08 \\ubd80\\uc871\\uc73c\\ub85c \\uc815\\uc9c0\\ub41c \\uc0c1\\ud0dc\\n        EXIT //  \\ud0c8\\ud1f4\\ud55c \\uc0c1\\ud0dc\\n    }\\n\\n    struct ValidatorData {\\n        address validator; // \\uac80\\uc99d\\uc790\\uc758 \\uc9c0\\uac11\\uc8fc\\uc18c\\n        uint256 start; // \\uac80\\uc99d\\uc790\\ub85c\\uc11c \\uc5ed\\ud560\\uc744 \\uc218\\ud589\\ud560 \\uc218 \\uc788\\ub294 \\uc2dc\\uc791 \\uc2dc\\uac04\\n        uint256 balance; // \\uac80\\uc99d\\uc790\\uc758 \\uc608\\uce58\\uae08\\n        Status status; // \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790 \\ub370\\uc774\\ud130\\uac00 \\uc800\\uc7a5\\ub418\\ub294 \\ubc30\\uc5f4\\n    address[] public items;\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790 \\ub370\\uc774\\ud130\\uac00 \\uc800\\uc7a5\\ub418\\ub294 \\ubc30\\uc5f4\\n    address[] public activeItems;\\n\\n    mapping(address => ValidatorData) public validators;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uac00 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Added(address validator, uint256 start, uint256 balance, Status status);\\n    /// @notice \\uc790\\uae08\\uc774 \\uc785\\uae09\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Deposited(address validator, uint256 amount, uint256 balance);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\ub4f1\\ub85d\\uc774 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedRegistration(address requester);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c \\ud0c8\\ud1f4\\uac00 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedExit(address requester, address validator);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc790\\ubc1c\\uc801 \\ud0c8\\ud1f4\\uac00 \\uc644\\ub8cc\\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Exited(address validator);\\n\\n    /// @notice \\uc0dd\\uc131\\uc790\\n    /// @param _validators \\ucd08\\uae30\\uc5d0 \\uc124\\uc815\\ub420 \\uac80\\uc99d\\uc790, \\uc608\\uce58\\uae08\\uc774 \\uc608\\uce58\\ub41c \\ud6c4 \\uadf8 \\uc989\\uc2dc \\ud65c\\uc131\\ud654 \\ub41c\\ub2e4.\\n    constructor(address _tokenAddress, address[] memory _validators) {\\n        tokenAddress = _tokenAddress;\\n\\n        for (uint256 i = 0; i < _validators.length; ++i) {\\n            ValidatorData memory item = ValidatorData({\\n                validator: _validators[i],\\n                start: block.timestamp,\\n                balance: 0,\\n                status: Status.STOP\\n            });\\n            items.push(_validators[i]);\\n            validators[_validators[i]] = item;\\n\\n            emit Added(item.validator, item.start, item.balance, item.status);\\n        }\\n    }\\n\\n    /// @notice \\uc608\\uce58\\uae08\\uc744 \\ucd94\\uac00\\ub85c \\uc785\\uae09\\ud569\\ub2c8\\ub2e4.\\n    /// @param _amount \\ucd94\\uac00\\ub85c \\uc785\\uae08\\ud560 \\uc608\\uce58 \\uae08\\uc561\\n    function deposit(uint256 _amount) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status != Status.INVALID, \\\"Not validator\\\");\\n        require(item.status != Status.EXIT, \\\"Already exited\\\");\\n\\n        IERC20 token = IERC20(tokenAddress);\\n        require(_amount <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), _amount);\\n\\n        validators[msg.sender].balance += _amount;\\n\\n        if (validators[msg.sender].balance >= MINIMUM_DEPOSIT_AMOUNT) validators[msg.sender].status = Status.ACTIVE;\\n\\n        emit Deposited(msg.sender, _amount, validators[msg.sender].balance);\\n    }\\n\\n    /// @notice \\uc2e0\\uaddc \\uac80\\uc99d\\uc790 \\ub4f1\\ub85d\\uc744 \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestRegistration() public {\\n        require(validators[msg.sender].status == Status.INVALID, \\\"Already validator\\\");\\n\\n        IERC20 token = IERC20(tokenAddress);\\n        require(MINIMUM_DEPOSIT_AMOUNT <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), MINIMUM_DEPOSIT_AMOUNT);\\n\\n        ValidatorData memory item = ValidatorData({\\n            validator: msg.sender,\\n            start: block.timestamp + 86500 * 7,\\n            balance: MINIMUM_DEPOSIT_AMOUNT,\\n            status: Status.ACTIVE\\n        });\\n\\n        items.push(msg.sender);\\n        validators[msg.sender] = item;\\n\\n        emit RequestedRegistration(msg.sender);\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c\\ud0c8\\ud1f4\\ub97c \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestExit(address validator) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        require(validators[validator].status != Status.INVALID, \\\"Not validator\\\");\\n        validators[validator].status = Status.EXIT;\\n\\n        if (validators[validator].balance > 0) {\\n            IERC20 token = IERC20(tokenAddress);\\n            token.transfer(validator, validators[validator].balance);\\n            validators[validator].balance = 0;\\n        }\\n\\n        emit RequestedExit(msg.sender, validator);\\n    }\\n\\n    function makeActiveItems() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        _makeActiveItems();\\n    }\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function getActiveItemsLength() public view returns (uint256 length) {\\n        return activeItems.length;\\n    }\\n\\n    function _makeActiveItems() internal {\\n        while (activeItems.length > 0) activeItems.pop();\\n        for (uint256 i = 0; i < items.length; ++i) {\\n            ValidatorData memory item = validators[items[i]];\\n\\n            if (item.status == Status.ACTIVE && item.start <= block.timestamp) {\\n                activeItems.push(items[i]);\\n            }\\n        }\\n    }\\n\\n    /// @notice \\uc790\\ubc1c\\uc801\\uc73c\\ub85c \\ud0c8\\ud1f4\\ud558\\uae30 \\uc704\\ud574 \\uc0ac\\uc6a9\\ub418\\ub294 \\ud568\\uc218\\uc785\\ub2c8\\ub2e4.\\n    function exit() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        makeActiveItems();\\n        require(activeItems.length > 1, \\\"Last validator\\\");\\n\\n        validators[msg.sender].status = Status.EXIT;\\n\\n        if (validators[msg.sender].balance > 0) {\\n            IERC20 token = IERC20(tokenAddress);\\n            token.transfer(msg.sender, validators[msg.sender].balance);\\n            validators[msg.sender].balance = 0;\\n        }\\n\\n        emit Exited(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x366f6846bbae2e598e1cf7359d55a54df42c5fe61b7b4245233cf21c5486612e\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80637bc324051161008c578063ba891f5c11610066578063ba891f5c146101be578063bfb231d2146101d1578063d1d20056146101f1578063d5f39488146101f9576100df565b80637bc3240514610165578063b023e1cc1461018b578063b6010fcd1461019e576100df565b806345405ed1116100bd57806345405ed11461012c5780635d404c6a1461013f5780636c85026014610152576100df565b80631f7b6d32146100e4578063356bb1ab146101025780633fe4676e14610117575b600080fd5b6100ec610201565b6040516100f99190611235565b60405180910390f35b610115610110366004610f64565b610207565b005b61011f61031d565b6040516100f9919061108d565b61011561013a366004610f64565b61032c565b6100ec61014d366004610f29565b61042c565b610115610160366004610f64565b610617565b610178610173366004610f29565b610717565b6040516100f997969594939291906110d9565b610115610199366004610fa7565b6107ea565b6101b16101ac366004610f29565b610af4565b6040516100f991906111ca565b6101156101cc366004610eea565b610c3d565b6101e46101df366004610ff3565b610ca8565b6040516100f991906110a1565b61011f610d54565b61011f610d63565b60015490565b6004546001600160a01b0316331461023a5760405162461bcd60e51b815260040161023190611193565b60405180910390fd5b600160008360405161024c9190611071565b9081526040519081900360200190206006015460ff16600181111561028157634e487b7160e01b600052602160045260246000fd5b141561031957806000836040516102989190611071565b908152602001604051809103902060040160008282546102b8919061123e565b925050819055507f1d84bae8d1f563d4e131a40d8c645666e1629dc693f0e9efdb8824f86de96a9182826000856040516102f29190611071565b908152604051908190036020018120600401546103109392916110b4565b60405180910390a15b5050565b6002546001600160a01b031681565b6004546001600160a01b031633146103565760405162461bcd60e51b815260040161023190611193565b60016000836040516103689190611071565b9081526040519081900360200190206006015460ff16600181111561039d57634e487b7160e01b600052602160045260246000fd5b141561031957806000836040516103b49190611071565b908152602001604051809103902060050160008282546103d4919061123e565b925050819055507f278f87ebfef3375948dc9e7b2f38fc7b8a349f190b4d8223464de7f9d6080828828260008560405161040e9190611071565b908152604051908190036020018120600501546103109392916110b4565b600060016000836040516104409190611071565b9081526040519081900360200190206006015460ff16600181111561047557634e487b7160e01b600052602160045260246000fd5b141561060e576000808360405161048c9190611071565b90815260200160405180910390206040518060e00160405290816000820180546104b59061129d565b80601f01602080910402602001604051908101604052809291908181526020018280546104e19061129d565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b50505091835250506001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c09092019160ff169081111561059557634e487b7160e01b600052602160045260246000fd5b60018111156105b457634e487b7160e01b600052602160045260246000fd5b81525050905080608001518160a0015182606001516105d3919061123e565b1015610604578060a00151816060015182608001516105f29190611256565b6105fc9190611256565b915050610612565b6000915050610612565b5060005b919050565b6004546001600160a01b031633146106415760405162461bcd60e51b815260040161023190611193565b60016000836040516106539190611071565b9081526040519081900360200190206006015460ff16600181111561068857634e487b7160e01b600052602160045260246000fd5b1415610319578060008360405161069f9190611071565b908152602001604051809103902060030160008282546106bf919061123e565b925050819055507f2a612b699b277ec7ea9851a2fddd295606bce35f368c4583e74254ce7b92d9d582826000856040516106f99190611071565b908152604051908190036020018120600301546103109392916110b4565b805160208183018101805160008252928201919093012091528054819061073d9061129d565b80601f01602080910402602001604051908101604052809291908181526020018280546107699061129d565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b5050506001840154600285015460038601546004870154600588015460069098015496979396929550909350919060ff1687565b336000805b600360009054906101000a90046001600160a01b03166001600160a01b031663de4847c46040518163ffffffff1660e01b815260040160206040518083038186803b15801561083d57600080fd5b505afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610875919061100b565b811015610947576003546040517f9c318c7b0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690639c318c7b906108c5908490600401611235565b60206040518083038186803b1580156108dd57600080fd5b505afa1580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190610f0d565b6001600160a01b0316836001600160a01b031614156109375760019150610947565b610940816112d8565b90506107ef565b50806109655760405162461bcd60e51b815260040161023190611125565b60006040518060e001604052808781526020018681526020018581526020016000815260200160008152602001600081526020016001808111156109b957634e487b7160e01b600052602160045260246000fd5b90526001805480820182556000919091528751919250610a02917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101906020890190610d72565b5080600087604051610a149190611071565b90815260200160405180910390206000820151816000019080519060200190610a3e929190610d72565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836001811115610aa957634e487b7160e01b600052602160045260246000fd5b02179055509050507f4830c66baef6ebbd1ea845dea5eacc38b4955bfcd724b9c8a3a1bd618175157b868686604051610ae4939291906110b4565b60405180910390a1505050505050565b610afc610df6565b600082604051610b0c9190611071565b90815260200160405180910390206040518060e0016040529081600082018054610b359061129d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b619061129d565b8015610bae5780601f10610b8357610100808354040283529160200191610bae565b820191906000526020600020905b815481529060010190602001808311610b9157829003601f168201915b50505091835250506001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c09092019160ff1690811115610c1557634e487b7160e01b600052602160045260246000fd5b6001811115610c3457634e487b7160e01b600052602160045260246000fd5b90525092915050565b6005546001600160a01b03163314610c675760405162461bcd60e51b81526004016102319061115c565b600480546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600580549091169055565b60018181548110610cb857600080fd5b906000526020600020016000915090508054610cd39061129d565b80601f0160208091040260200160405190810160405280929190818152602001828054610cff9061129d565b8015610d4c5780601f10610d2157610100808354040283529160200191610d4c565b820191906000526020600020905b815481529060010190602001808311610d2f57829003601f168201915b505050505081565b6004546001600160a01b031681565b6005546001600160a01b031681565b828054610d7e9061129d565b90600052602060002090601f016020900481019282610da05760008555610de6565b82601f10610db957805160ff1916838001178555610de6565b82800160010185558215610de6579182015b82811115610de6578251825591602001919060010190610dcb565b50610df2929150610e54565b5090565b6040518060e0016040528060608152602001600081526020016000801916815260200160008152602001600081526020016000815260200160006001811115610e4f57634e487b7160e01b600052602160045260246000fd5b905290565b5b80821115610df25760008155600101610e55565b600082601f830112610e79578081fd5b813567ffffffffffffffff80821115610e9457610e94611327565b6040516020601f19601f8501168201018181108382111715610eb857610eb8611327565b604052828152848301602001861015610ecf578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610efb578081fd5b8135610f068161133d565b9392505050565b600060208284031215610f1e578081fd5b8151610f068161133d565b600060208284031215610f3a578081fd5b813567ffffffffffffffff811115610f50578182fd5b610f5c84828501610e69565b949350505050565b60008060408385031215610f76578081fd5b823567ffffffffffffffff811115610f8c578182fd5b610f9885828601610e69565b95602094909401359450505050565b600080600060608486031215610fbb578081fd5b833567ffffffffffffffff811115610fd1578182fd5b610fdd86828701610e69565b9660208601359650604090950135949350505050565b600060208284031215611004578081fd5b5035919050565b60006020828403121561101c578081fd5b5051919050565b6002811061104157634e487b7160e01b600052602160045260246000fd5b9052565b6000815180845261105d81602086016020860161126d565b601f01601f19169290920160200192915050565b6000825161108381846020870161126d565b9190910192915050565b6001600160a01b0391909116815260200190565b600060208252610f066020830184611045565b6000606082526110c76060830186611045565b60208301949094525060400152919050565b600060e082526110ec60e083018a611045565b90508760208301528660408301528560608301528460808301528360a083015261111960c0830184611023565b98975050505050505050565b6020808252600d908201527f4e6f742076616c696461746f7200000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f207065726d697373696f6e73000000000000000000000000000000000000604082015260600190565b6020808252600a908201527f4e6f74206c656467657200000000000000000000000000000000000000000000604082015260600190565b600060208252825160e060208401526111e7610100840182611045565b9050602084015160408401526040840151606084015260608401516080840152608084015160a084015260a084015160c084015260c084015161122d60e0850182611023565b509392505050565b90815260200190565b6000821982111561125157611251611311565b500190565b60008282101561126857611268611311565b500390565b60005b83811015611288578181015183820152602001611270565b83811115611297576000848401525b50505050565b6002810460018216806112b157607f821691505b602082108114156112d257634e487b7160e01b600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561130a5761130a611311565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461135257600080fd5b5056fea26469706673582212202e121aa45e68be8b0e68e83c18478170a5ff66ca65fd37ce2295fb431ec0479a64736f6c63430008000033",
    "devdoc": {
        "kind": "dev",
        "methods": {
            "add(string,uint256,bytes32)": {
                "params": {
                    "_email": "가맹점주 이메일 해시",
                    "_franchiseeId": "가맹점 아이디",
                    "_payoutWaitTime": "제품구매 후 마일리지가 지급될 시간"
                }
            },
            "constructor": {
                "params": {
                    "_validatorAddress": "검증자컬랙션의 주소"
                }
            }
        },
        "version": 1
    },
    "userdoc": {
        "events": {
            "Added(string,uint256,bytes32)": {
                "notice": "가맹점이 추가될 때 발생되는 이벤트"
            },
            "IncreasedClearedMileage(string,uint256,uint256)": {
                "notice": "정산된 마일리가 증가할 때 발생되는 이벤트"
            },
            "IncreasedProvidedMileage(string,uint256,uint256)": {
                "notice": "가맹점의 마일리지가 증가할 때 발생되는 이벤트"
            },
            "IncreasedUsedMileage(string,uint256,uint256)": {
                "notice": "사용자의 마일리지가 증가할 때 발생되는 이벤트"
            }
        },
        "kind": "user",
        "methods": {
            "add(string,uint256,bytes32)": {
                "notice": "가맹점을 추가한다"
            },
            "addClearedMileage(string,uint256)": {
                "notice": "정산된 총 마일지리를 누적한다"
            },
            "addProvidedMileage(string,uint256)": {
                "notice": "지급된 총 마일지리를 누적한다"
            },
            "addUsedMileage(string,uint256)": {
                "notice": "사용된 총 마일지리를 누적한다"
            },
            "constructor": {
                "notice": "생성자"
            },
            "franchisees(string)": {
                "notice": "가맹점 아이디에 해당하는 가맹점 데이터가 저장되는 맵"
            },
            "getClearMileage(string)": {
                "notice": "정산되어야 할 마일지리의 량을 리턴합니다."
            },
            "getItem(string)": {
                "notice": "가맹점 데아터를 리턴한다"
            },
            "items(uint256)": {
                "notice": "가맹점 아이디가 저장된 배열"
            },
            "length()": {
                "notice": "가맹점의 갯수를 리턴한다"
            },
            "setLedgerAddress(address)": {
                "notice": "원장 컨트랙트의 주소를 호출한다."
            }
        },
        "notice": "가맹점컬랙션",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 2119,
                "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                "label": "franchisees",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_string_memory_ptr,t_struct(FranchiseeData)2113_storage)"
            },
            {
                "astId": 2123,
                "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                "label": "items",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_string_storage)dyn_storage"
            },
            {
                "astId": 2125,
                "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                "label": "validatorAddress",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 2128,
                "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                "label": "validatorCollection",
                "offset": 0,
                "slot": "3",
                "type": "t_contract(ValidatorCollection)4414"
            },
            {
                "astId": 2166,
                "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                "label": "ledgerAddress",
                "offset": 0,
                "slot": "4",
                "type": "t_address"
            },
            {
                "astId": 2168,
                "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                "label": "deployer",
                "offset": 0,
                "slot": "5",
                "type": "t_address"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
                "base": "t_string_storage",
                "encoding": "dynamic_array",
                "label": "string[]",
                "numberOfBytes": "32"
            },
            "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
            },
            "t_contract(ValidatorCollection)4414": {
                "encoding": "inplace",
                "label": "contract ValidatorCollection",
                "numberOfBytes": "20"
            },
            "t_enum(FranchiseeStatus)2097": {
                "encoding": "inplace",
                "label": "enum FranchiseeCollection.FranchiseeStatus",
                "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_struct(FranchiseeData)2113_storage)": {
                "encoding": "mapping",
                "key": "t_string_memory_ptr",
                "label": "mapping(string => struct FranchiseeCollection.FranchiseeData)",
                "numberOfBytes": "32",
                "value": "t_struct(FranchiseeData)2113_storage"
            },
            "t_string_memory_ptr": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_struct(FranchiseeData)2113_storage": {
                "encoding": "inplace",
                "label": "struct FranchiseeCollection.FranchiseeData",
                "members": [
                    {
                        "astId": 2099,
                        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                        "label": "franchiseeId",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 2101,
                        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                        "label": "payoutWaitTime",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 2103,
                        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                        "label": "email",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes32"
                    },
                    {
                        "astId": 2105,
                        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                        "label": "providedMileage",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 2107,
                        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                        "label": "usedMileage",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 2109,
                        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                        "label": "clearedMileage",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 2112,
                        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
                        "label": "status",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_enum(FranchiseeStatus)2097"
                    }
                ],
                "numberOfBytes": "224"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
