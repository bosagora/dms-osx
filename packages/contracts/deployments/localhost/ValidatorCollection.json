{
  "address": "0x3D6B7A5C7e471C53B5146CdBEFd59ffaA03138Ee",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_validators",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum ValidatorCollection.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "AddedValidator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "DepositedForValidator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "ExitedFromValidator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "RequestedToExitValidator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        }
      ],
      "name": "RequestedToJoinValidator",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_DEPOSIT_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_idx",
          "type": "uint256"
        }
      ],
      "name": "activeItemOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeItemsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_idx",
          "type": "uint256"
        }
      ],
      "name": "itemOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "itemsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "makeActiveItems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "requestExit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestRegistration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "validatorOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "validator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "enum ValidatorCollection.Status",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct ValidatorCollection.ValidatorData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6cfddc0a0d04160025a1d59e5019d4bdb5f17724566105c80ff1a9e495b70b49",
  "receipt": {
    "to": null,
    "from": "0xDc245797409fb79446523Fa1A4ca97294eef22EE",
    "contractAddress": "0x3D6B7A5C7e471C53B5146CdBEFd59ffaA03138Ee",
    "transactionIndex": 0,
    "gasUsed": "1738143",
    "logsBloom": "0x
    "blockHash": "0x3d78b4b881aa0efdbf108f5b017dfa012b38e7df7cdd263b68081ebf4c1993ca",
    "transactionHash": "0x6cfddc0a0d04160025a1d59e5019d4bdb5f17724566105c80ff1a9e495b70b49",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 333,
        "transactionHash": "0x6cfddc0a0d04160025a1d59e5019d4bdb5f17724566105c80ff1a9e495b70b49",
        "address": "0x3D6B7A5C7e471C53B5146CdBEFd59ffaA03138Ee",
        "topics": [
          "0xab144ab6f4ad6ddf447bccb8ac6145bd53ebebe017bb53365eff5ee5f9303216"
        ],
        "data": "0x0000000000000000000000009e8549cc1b5b9036ac410ed11966bb3c6b94a77d0000000000000000000000000000000000000000000000000000000064db24ef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "logIndex": 0,
        "blockHash": "0x3d78b4b881aa0efdbf108f5b017dfa012b38e7df7cdd263b68081ebf4c1993ca"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 333,
        "transactionHash": "0x6cfddc0a0d04160025a1d59e5019d4bdb5f17724566105c80ff1a9e495b70b49",
        "address": "0x3D6B7A5C7e471C53B5146CdBEFd59ffaA03138Ee",
        "topics": [
          "0xab144ab6f4ad6ddf447bccb8ac6145bd53ebebe017bb53365eff5ee5f9303216"
        ],
        "data": "0x000000000000000000000000103cb97f47801563c875942510ff0585e31f55b50000000000000000000000000000000000000000000000000000000064db24ef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "logIndex": 1,
        "blockHash": "0x3d78b4b881aa0efdbf108f5b017dfa012b38e7df7cdd263b68081ebf4c1993ca"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 333,
        "transactionHash": "0x6cfddc0a0d04160025a1d59e5019d4bdb5f17724566105c80ff1a9e495b70b49",
        "address": "0x3D6B7A5C7e471C53B5146CdBEFd59ffaA03138Ee",
        "topics": [
          "0xab144ab6f4ad6ddf447bccb8ac6145bd53ebebe017bb53365eff5ee5f9303216"
        ],
        "data": "0x000000000000000000000000f49e8729c774f31eb1b7724e898bc9230a13e54c0000000000000000000000000000000000000000000000000000000064db24ef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "logIndex": 2,
        "blockHash": "0x3d78b4b881aa0efdbf108f5b017dfa012b38e7df7cdd263b68081ebf4c1993ca"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 333,
        "transactionHash": "0x6cfddc0a0d04160025a1d59e5019d4bdb5f17724566105c80ff1a9e495b70b49",
        "address": "0x3D6B7A5C7e471C53B5146CdBEFd59ffaA03138Ee",
        "topics": [
          "0xab144ab6f4ad6ddf447bccb8ac6145bd53ebebe017bb53365eff5ee5f9303216"
        ],
        "data": "0x000000000000000000000000a6ee9ddfa9b82df810b8e4afaa5ff04a267d49300000000000000000000000000000000000000000000000000000000064db24ef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "logIndex": 3,
        "blockHash": "0x3d78b4b881aa0efdbf108f5b017dfa012b38e7df7cdd263b68081ebf4c1993ca"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 333,
        "transactionHash": "0x6cfddc0a0d04160025a1d59e5019d4bdb5f17724566105c80ff1a9e495b70b49",
        "address": "0x3D6B7A5C7e471C53B5146CdBEFd59ffaA03138Ee",
        "topics": [
          "0xab144ab6f4ad6ddf447bccb8ac6145bd53ebebe017bb53365eff5ee5f9303216"
        ],
        "data": "0x000000000000000000000000898bf21a9e1ff51d3f1248e0a253f6a58c3a736a0000000000000000000000000000000000000000000000000000000064db24ef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "logIndex": 4,
        "blockHash": "0x3d78b4b881aa0efdbf108f5b017dfa012b38e7df7cdd263b68081ebf4c1993ca"
      }
    ],
    "blockNumber": 333,
    "cumulativeGasUsed": "1738143",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4Ca91738C7cD24895467c6d550D96BE8dC4b33AA",
    [
      "0x9E8549cc1B5b9036AC410Ed11966BB3c6B94A77d",
      "0x103CB97f47801563C875942510Ff0585E31F55b5",
      "0xF49e8729c774f31eB1b7724E898BC9230a13E54c",
      "0xA6Ee9Ddfa9B82DF810b8E4AFaa5ff04A267d4930",
      "0x898Bf21a9e1fF51d3F1248E0A253f6A58C3a736a"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "47bc9542654d297df4d2a8500a5bb79f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_validators\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ValidatorCollection.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"AddedValidator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"DepositedForValidator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"ExitedFromValidator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"RequestedToExitValidator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"RequestedToJoinValidator\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_DEPOSIT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"activeItemOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeItemsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"itemOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"itemsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeActiveItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"requestExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"validatorOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"enum ValidatorCollection.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ValidatorCollection.ValidatorData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"activeItemOf(uint256)\":{\"params\":{\"_idx\":\"\\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\"}},\"constructor\":{\"params\":{\"_validators\":\"\\ucd08\\uae30\\uc5d0 \\uc124\\uc815\\ub420 \\uac80\\uc99d\\uc790, \\uc608\\uce58\\uae08\\uc774 \\uc608\\uce58\\ub41c \\ud6c4 \\uadf8 \\uc989\\uc2dc \\ud65c\\uc131\\ud654 \\ub41c\\ub2e4.\"}},\"deposit(uint256)\":{\"params\":{\"_amount\":\"\\ucd94\\uac00\\ub85c \\uc785\\uae08\\ud560 \\uc608\\uce58 \\uae08\\uc561\"}},\"itemOf(uint256)\":{\"params\":{\"_idx\":\"\\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\"}},\"validatorOf(address)\":{\"params\":{\"_account\":\"\\uc9c0\\uac11\\uc8fc\\uc18c\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AddedValidator(address,uint256,uint256,uint8)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uac00 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"DepositedForValidator(address,uint256,uint256)\":{\"notice\":\"\\uc790\\uae08\\uc774 \\uc785\\uae09\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"ExitedFromValidator(address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\uc790\\ubc1c\\uc801 \\ud0c8\\ud1f4\\uac00 \\uc644\\ub8cc\\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"RequestedToExitValidator(address,address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c \\ud0c8\\ud1f4\\uac00 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"RequestedToJoinValidator(address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\ub4f1\\ub85d\\uc774 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"}},\"kind\":\"user\",\"methods\":{\"activeItemOf(uint256)\":{\"notice\":\"\\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4.\"},\"activeItemsLength()\":{\"notice\":\"\\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\"},\"constructor\":{\"notice\":\"\\uc0dd\\uc131\\uc790\"},\"deposit(uint256)\":{\"notice\":\"\\uc608\\uce58\\uae08\\uc744 \\ucd94\\uac00\\ub85c \\uc785\\uae09\\ud569\\ub2c8\\ub2e4.\"},\"exit()\":{\"notice\":\"\\uc790\\ubc1c\\uc801\\uc73c\\ub85c \\ud0c8\\ud1f4\\ud558\\uae30 \\uc704\\ud574 \\uc0ac\\uc6a9\\ub418\\ub294 \\ud568\\uc218\\uc785\\ub2c8\\ub2e4.\"},\"itemOf(uint256)\":{\"notice\":\"\\ub4f1\\ub85d\\ub41c \\uac80\\uc99d\\uc790\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4.\"},\"itemsLength()\":{\"notice\":\"\\ub4f1\\ub85d\\ub41c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\"},\"requestExit(address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c\\ud0c8\\ud1f4\\ub97c \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\"},\"requestRegistration()\":{\"notice\":\"\\uc2e0\\uaddc \\uac80\\uc99d\\uc790 \\ub4f1\\ub85d\\uc744 \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\"},\"validatorOf(address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\ub370\\uc774\\ud0c0\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\"}},\"notice\":\"\\uac80\\uc99d\\uc790\\ub4e4\\uc744 \\uc800\\uc7a5\\ud558\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ValidatorCollection.sol\":\"ValidatorCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/ValidatorCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @notice \\uac80\\uc99d\\uc790\\ub4e4\\uc744 \\uc800\\uc7a5\\ud558\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\\ncontract ValidatorCollection {\\n    uint256 public constant MINIMUM_DEPOSIT_AMOUNT = 50000000000000000000000;\\n\\n    address public tokenAddress;\\n\\n    IERC20 private token;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\ucf54\\ub4dc\\n    enum Status {\\n        INVALID, //  \\ucd08\\uae30\\uac12\\n        ACTIVE, //  \\uac80\\uc99d\\uc790\\uc758 \\uae30\\ub2a5\\uc774 \\ud65c\\uc131\\ud654\\ub428\\n        STOP, //  \\uc608\\uce58\\uae08 \\ubd80\\uc871\\uc73c\\ub85c \\uc815\\uc9c0\\ub41c \\uc0c1\\ud0dc\\n        EXIT //  \\ud0c8\\ud1f4\\ud55c \\uc0c1\\ud0dc\\n    }\\n\\n    struct ValidatorData {\\n        address validator; // \\uac80\\uc99d\\uc790\\uc758 \\uc9c0\\uac11\\uc8fc\\uc18c\\n        uint256 start; // \\uac80\\uc99d\\uc790\\ub85c\\uc11c \\uc5ed\\ud560\\uc744 \\uc218\\ud589\\ud560 \\uc218 \\uc788\\ub294 \\uc2dc\\uc791 \\uc2dc\\uac04\\n        uint256 balance; // \\uac80\\uc99d\\uc790\\uc758 \\uc608\\uce58\\uae08\\n        Status status; // \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\n    }\\n\\n    address[] private items;\\n\\n    address[] private activeItems;\\n\\n    mapping(address => ValidatorData) private validators;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uac00 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event AddedValidator(address validator, uint256 start, uint256 balance, Status status);\\n    /// @notice \\uc790\\uae08\\uc774 \\uc785\\uae09\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event DepositedForValidator(address validator, uint256 amount, uint256 balance);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\ub4f1\\ub85d\\uc774 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedToJoinValidator(address requester);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c \\ud0c8\\ud1f4\\uac00 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedToExitValidator(address requester, address validator);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc790\\ubc1c\\uc801 \\ud0c8\\ud1f4\\uac00 \\uc644\\ub8cc\\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event ExitedFromValidator(address validator);\\n\\n    /// @notice \\uc0dd\\uc131\\uc790\\n    /// @param _validators \\ucd08\\uae30\\uc5d0 \\uc124\\uc815\\ub420 \\uac80\\uc99d\\uc790, \\uc608\\uce58\\uae08\\uc774 \\uc608\\uce58\\ub41c \\ud6c4 \\uadf8 \\uc989\\uc2dc \\ud65c\\uc131\\ud654 \\ub41c\\ub2e4.\\n    constructor(address _tokenAddress, address[] memory _validators) {\\n        tokenAddress = _tokenAddress;\\n        token = IERC20(_tokenAddress);\\n\\n        for (uint256 i = 0; i < _validators.length; ++i) {\\n            ValidatorData memory item = ValidatorData({\\n                validator: _validators[i],\\n                start: block.timestamp,\\n                balance: 0,\\n                status: Status.STOP\\n            });\\n            items.push(_validators[i]);\\n            validators[_validators[i]] = item;\\n\\n            emit AddedValidator(item.validator, item.start, item.balance, item.status);\\n        }\\n    }\\n\\n    /// @notice \\uc608\\uce58\\uae08\\uc744 \\ucd94\\uac00\\ub85c \\uc785\\uae09\\ud569\\ub2c8\\ub2e4.\\n    /// @param _amount \\ucd94\\uac00\\ub85c \\uc785\\uae08\\ud560 \\uc608\\uce58 \\uae08\\uc561\\n    function deposit(uint256 _amount) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status != Status.INVALID, \\\"Not validator\\\");\\n        require(item.status != Status.EXIT, \\\"Already exited\\\");\\n\\n        require(_amount <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), _amount);\\n\\n        validators[msg.sender].balance += _amount;\\n\\n        if (validators[msg.sender].balance >= MINIMUM_DEPOSIT_AMOUNT) validators[msg.sender].status = Status.ACTIVE;\\n\\n        emit DepositedForValidator(msg.sender, _amount, validators[msg.sender].balance);\\n    }\\n\\n    /// @notice \\uc2e0\\uaddc \\uac80\\uc99d\\uc790 \\ub4f1\\ub85d\\uc744 \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestRegistration() public {\\n        require(validators[msg.sender].status == Status.INVALID, \\\"Already validator\\\");\\n\\n        require(MINIMUM_DEPOSIT_AMOUNT <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), MINIMUM_DEPOSIT_AMOUNT);\\n\\n        ValidatorData memory item = ValidatorData({\\n            validator: msg.sender,\\n            start: block.timestamp + 86500 * 7,\\n            balance: MINIMUM_DEPOSIT_AMOUNT,\\n            status: Status.ACTIVE\\n        });\\n\\n        items.push(msg.sender);\\n        validators[msg.sender] = item;\\n\\n        emit RequestedToJoinValidator(msg.sender);\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c\\ud0c8\\ud1f4\\ub97c \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestExit(address validator) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        require(validators[validator].status != Status.INVALID, \\\"Not validator\\\");\\n        validators[validator].status = Status.EXIT;\\n\\n        if (validators[validator].balance > 0) {\\n            token.transfer(validator, validators[validator].balance);\\n            validators[validator].balance = 0;\\n        }\\n\\n        emit RequestedToExitValidator(msg.sender, validator);\\n    }\\n\\n    function makeActiveItems() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        _makeActiveItems();\\n    }\\n\\n    /// @notice \\ub4f1\\ub85d\\ub41c \\uac80\\uc99d\\uc790\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4.\\n    /// @param _idx \\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\\n    function itemOf(uint256 _idx) public view returns (address) {\\n        return items[_idx];\\n    }\\n\\n    /// @notice \\ub4f1\\ub85d\\ub41c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function itemsLength() public view returns (uint256) {\\n        return items.length;\\n    }\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4.\\n    /// @param _idx \\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\\n    function activeItemOf(uint256 _idx) public view returns (address) {\\n        return activeItems[_idx];\\n    }\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function activeItemsLength() public view returns (uint256) {\\n        return activeItems.length;\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\ub370\\uc774\\ud0c0\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    /// @param _account \\uc9c0\\uac11\\uc8fc\\uc18c\\n    function validatorOf(address _account) public view returns (ValidatorData memory) {\\n        return validators[_account];\\n    }\\n\\n    function _makeActiveItems() internal {\\n        while (activeItems.length > 0) activeItems.pop();\\n        for (uint256 i = 0; i < items.length; ++i) {\\n            ValidatorData memory item = validators[items[i]];\\n\\n            if (item.status == Status.ACTIVE && item.start <= block.timestamp) {\\n                activeItems.push(items[i]);\\n            }\\n        }\\n    }\\n\\n    /// @notice \\uc790\\ubc1c\\uc801\\uc73c\\ub85c \\ud0c8\\ud1f4\\ud558\\uae30 \\uc704\\ud574 \\uc0ac\\uc6a9\\ub418\\ub294 \\ud568\\uc218\\uc785\\ub2c8\\ub2e4.\\n    function exit() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        makeActiveItems();\\n        require(activeItems.length > 1, \\\"Last validator\\\");\\n\\n        validators[msg.sender].status = Status.EXIT;\\n\\n        if (validators[msg.sender].balance > 0) {\\n            token.transfer(msg.sender, validators[msg.sender].balance);\\n            validators[msg.sender].balance = 0;\\n        }\\n\\n        emit ExitedFromValidator(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0xa79020a5d87cfd8d3379f610b3d6b166da8115bf069042de8183a8e2c094853b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c8063b6b55f2511610081578063f666d1b21161005b578063f666d1b214610167578063f863208d14610187578063fb0487051461018f576100d4565b8063b6b55f2514610144578063c669413a14610157578063e9fad8ee1461015f576100d4565b80637a5e8be9116100b25780637a5e8be9146101145780639d1da6df146101345780639d76ea581461013c576100d4565b806328cb1e38146100d95780636c622b2d146100ee57806377172f0e1461010c575b600080fd5b6100ec6100e736600461114f565b6101a2565b005b6100f6610456565b60405161010391906113fc565b60405180910390f35b6100f6610464565b61012761012236600461119d565b61046a565b60405161010391906111cd565b6100ec6104a8565b6101276105c1565b6100ec61015236600461119d565b6105d0565b6100ec61091c565b6100ec610c1f565b61017a61017536600461114f565b610e74565b60405161010391906113a3565b6100f6610f16565b61012761019d36600461119d565b610f1c565b336000908152600460209081526040808320815160808101835281546001600160a01b03168152600182015493810193909352600281015491830191909152600380820154606084019160ff9091169081111561020f57634e487b7160e01b600052602160045260246000fd5b600381111561022e57634e487b7160e01b600052602160045260246000fd5b90525080519091506001600160a01b031633146102665760405162461bcd60e51b815260040161025d90611259565b60405180910390fd5b60018160600151600381111561028c57634e487b7160e01b600052602160045260246000fd5b14801561029d575042816020015111155b6102b95760405162461bcd60e51b815260040161025d90611290565b6001600160a01b038216600090815260046020526040812060039081015460ff16908111156102f857634e487b7160e01b600052602160045260246000fd5b14156103165760405162461bcd60e51b815260040161025d90611259565b6001600160a01b03821660009081526004602052604090206003808201805460ff191690911790556002015415610419576001546001600160a01b038381166000908152600460208190526040918290206002015491517fa9059cbb000000000000000000000000000000000000000000000000000000008152929093169263a9059cbb926103a992879290910161121f565b602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb919061117d565b506001600160a01b0382166000908152600460205260408120600201555b7f66164a5551df31b52f2428182fdae7db469bfe846d1e50484d421083073d7d12338360405161044a9291906111e1565b60405180910390a15050565b690a968163f0a57b40000081565b60035490565b60006003828154811061048d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b336000908152600460209081526040808320815160808101835281546001600160a01b03168152600182015493810193909352600281015491830191909152600380820154606084019160ff9091169081111561051557634e487b7160e01b600052602160045260246000fd5b600381111561053457634e487b7160e01b600052602160045260246000fd5b90525080519091506001600160a01b031633146105635760405162461bcd60e51b815260040161025d90611259565b60018160600151600381111561058957634e487b7160e01b600052602160045260246000fd5b14801561059a575042816020015111155b6105b65760405162461bcd60e51b815260040161025d90611290565b6105be610f3f565b50565b6000546001600160a01b031681565b336000908152600460209081526040808320815160808101835281546001600160a01b03168152600182015493810193909352600281015491830191909152600380820154606084019160ff9091169081111561063d57634e487b7160e01b600052602160045260246000fd5b600381111561065c57634e487b7160e01b600052602160045260246000fd5b90525080519091506001600160a01b0316331461068b5760405162461bcd60e51b815260040161025d90611259565b6000816060015160038111156106b157634e487b7160e01b600052602160045260246000fd5b14156106cf5760405162461bcd60e51b815260040161025d90611259565b6003816060015160038111156106f557634e487b7160e01b600052602160045260246000fd5b14156107135760405162461bcd60e51b815260040161025d906112c7565b6001546040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063dd62ed3e9061075e90339030906004016111e1565b60206040518083038186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae91906111b5565b8211156107cd5760405162461bcd60e51b815260040161025d90611335565b6001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd9061081a903390309087906004016111fb565b602060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c919061117d565b50336000908152600460205260408120600201805484929061088f908490611405565b909155505033600090815260046020526040902060020154690a968163f0a57b400000116108d557336000908152600460205260409020600301805460ff191660011790555b33600081815260046020526040908190206002015490517f840b5478686a081ffb96e8a1ba1991c73b6e597c01edf697cf0dc90fd46186d89261044a929091869190611238565b33600090815260046020526040812060039081015460ff169081111561095257634e487b7160e01b600052602160045260246000fd5b1461096f5760405162461bcd60e51b815260040161025d9061136c565b6001546040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063dd62ed3e906109ba90339030906004016111e1565b60206040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a91906111b5565b690a968163f0a57b4000001115610a335760405162461bcd60e51b815260040161025d90611335565b6001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd90610a8a9033903090690a968163f0a57b400000906004016111fb565b602060405180830381600087803b158015610aa457600080fd5b505af1158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc919061117d565b50604080516080810190915233815260009060208101610aff4262093d3c611405565b8152690a968163f0a57b40000060208201526040016001905260028054600180820183557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180543373ffffffffffffffffffffffffffffffffffffffff199182168117909255600091825260046020908152604092839020865181549093166001600160a01b0390931692909217825585015181840155908401519281019290925560608301516003808401805495965086959293909260ff1916918490811115610bdd57634e487b7160e01b600052602160045260246000fd5b02179055509050507f86e934055c176b947f7145c3fa773937bcbe57fb8138bd1ce3431eebd9ab5be933604051610c1491906111cd565b60405180910390a150565b336000908152600460209081526040808320815160808101835281546001600160a01b03168152600182015493810193909352600281015491830191909152600380820154606084019160ff90911690811115610c8c57634e487b7160e01b600052602160045260246000fd5b6003811115610cab57634e487b7160e01b600052602160045260246000fd5b90525080519091506001600160a01b03163314610cda5760405162461bcd60e51b815260040161025d90611259565b600181606001516003811115610d0057634e487b7160e01b600052602160045260246000fd5b148015610d11575042816020015111155b610d2d5760405162461bcd60e51b815260040161025d90611290565b610d356104a8565b600354600110610d575760405162461bcd60e51b815260040161025d906112fe565b3360009081526004602052604090206003808201805460ff191690911790556002015415610e4557600154336000818152600460208190526040918290206002015491517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039094169363a9059cbb93610dde93909290910161121f565b602060405180830381600087803b158015610df857600080fd5b505af1158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e30919061117d565b50336000908152600460205260408120600201555b7f9140a1c7708a6f29871137e319a9cc85b97f0d10958c22316e5a1ed471f08ee233604051610c1491906111cd565b610e7c61112a565b6001600160a01b03808316600090815260046020908152604091829020825160808101845281549094168452600181015491840191909152600281015491830191909152600380820154606084019160ff90911690811115610eee57634e487b7160e01b600052602160045260246000fd5b6003811115610f0d57634e487b7160e01b600052602160045260246000fd5b90525092915050565b60025490565b60006002828154811061048d57634e487b7160e01b600052603260045260246000fd5b60035415610f9a576003805480610f6657634e487b7160e01b600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055610f3f565b60005b6002548110156105be5760006004600060028481548110610fce57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160808101845281549094168452600181015491840191909152600281015491830191909152600380820154606084019160ff9091169081111561104d57634e487b7160e01b600052602160045260246000fd5b600381111561106c57634e487b7160e01b600052602160045260246000fd5b905250905060018160600151600381111561109757634e487b7160e01b600052602160045260246000fd5b1480156110a8575042816020015111155b15611119576003600283815481106110d057634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015483546001810185559383529120909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790555b506111238161141d565b9050610f9d565b6040805160808101825260008082526020820181905291810182905290606082015290565b600060208284031215611160578081fd5b81356001600160a01b0381168114611176578182fd5b9392505050565b60006020828403121561118e578081fd5b81518015158114611176578182fd5b6000602082840312156111ae578081fd5b5035919050565b6000602082840312156111c6578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6020808252600d908201527f4e6f742076616c696461746f7200000000000000000000000000000000000000604082015260600190565b60208082526011908201527f496e76616c69642076616c696461746f72000000000000000000000000000000604082015260600190565b6020808252600e908201527f416c726561647920657869746564000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4c6173742076616c696461746f72000000000000000000000000000000000000604082015260600190565b60208082526013908201527f4e6f7420616c6c6f776564206465706f73697400000000000000000000000000604082015260600190565b60208082526011908201527f416c72656164792076616c696461746f72000000000000000000000000000000604082015260600190565b60006080820190506001600160a01b03835116825260208301516020830152604083015160408301526060830151600481106113ef57634e487b7160e01b600052602160045260246000fd5b8060608401525092915050565b90815260200190565b6000821982111561141857611418611438565b500190565b600060001982141561143157611431611438565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220555e0f79da25d41bed9d3134db38a02bf2848e326b9f0db5b460ae567ea1bef664736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "activeItemOf(uint256)": {
        "params": {
          "_idx": "배열의 순번"
        }
      },
      "constructor": {
        "params": {
          "_validators": "초기에 설정될 검증자, 예치금이 예치된 후 그 즉시 활성화 된다."
        }
      },
      "deposit(uint256)": {
        "params": {
          "_amount": "추가로 입금할 예치 금액"
        }
      },
      "itemOf(uint256)": {
        "params": {
          "_idx": "배열의 순번"
        }
      },
      "validatorOf(address)": {
        "params": {
          "_account": "지갑주소"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AddedValidator(address,uint256,uint256,uint8)": {
        "notice": "검증자가 추가될 때 발생되는 이벤트"
      },
      "DepositedForValidator(address,uint256,uint256)": {
        "notice": "자금이 입급될 때 발생되는 이벤트"
      },
      "ExitedFromValidator(address)": {
        "notice": "검증자의 자발적 탈퇴가 완료되었을 때 발생되는 이벤트"
      },
      "RequestedToExitValidator(address,address)": {
        "notice": "검증자의 강제 탈퇴가 요청 되었을 때 발생되는 이벤트"
      },
      "RequestedToJoinValidator(address)": {
        "notice": "검증자의 등록이 요청 되었을 때 발생되는 이벤트"
      }
    },
    "kind": "user",
    "methods": {
      "activeItemOf(uint256)": {
        "notice": "유효한 검증자를 리턴한다."
      },
      "activeItemsLength()": {
        "notice": "유효한 검증자의 수를 리턴합니다."
      },
      "constructor": {
        "notice": "생성자"
      },
      "deposit(uint256)": {
        "notice": "예치금을 추가로 입급합니다."
      },
      "exit()": {
        "notice": "자발적으로 탈퇴하기 위해 사용되는 함수입니다."
      },
      "itemOf(uint256)": {
        "notice": "등록된 검증자를 리턴한다."
      },
      "itemsLength()": {
        "notice": "등록된 검증자의 수를 리턴합니다."
      },
      "requestExit(address)": {
        "notice": "검증자의 강제탈퇴를 신청합니다."
      },
      "requestRegistration()": {
        "notice": "신규 검증자 등록을 신청합니다."
      },
      "validatorOf(address)": {
        "notice": "검증자의 데이타를 리턴합니다."
      }
    },
    "notice": "검증자들을 저장하는 컨트랙트",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4675,
        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
        "label": "tokenAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4678,
        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)1053"
      },
      {
        "astId": 4696,
        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
        "label": "items",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4699,
        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
        "label": "activeItems",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4704,
        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
        "label": "validators",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(ValidatorData)4693_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)1053": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(Status)4683": {
        "encoding": "inplace",
        "label": "enum ValidatorCollection.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(ValidatorData)4693_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ValidatorCollection.ValidatorData)",
        "numberOfBytes": "32",
        "value": "t_struct(ValidatorData)4693_storage"
      },
      "t_struct(ValidatorData)4693_storage": {
        "encoding": "inplace",
        "label": "struct ValidatorCollection.ValidatorData",
        "members": [
          {
            "astId": 4685,
            "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
            "label": "validator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4687,
            "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
            "label": "start",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4689,
            "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
            "label": "balance",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4692,
            "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
            "label": "status",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(Status)4683"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}