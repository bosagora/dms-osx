{
    "address": "0x979a62090BDCff36F2e140F6915fbAdA7510cb6a",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_tokenAddress",
                    "type": "address"
                },
                {
                    "internalType": "address[]",
                    "name": "_validators",
                    "type": "address[]"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "validator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "start",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "enum ValidatorCollection.Status",
                    "name": "status",
                    "type": "uint8"
                }
            ],
            "name": "Added",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "validator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "Deposited",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "validator",
                    "type": "address"
                }
            ],
            "name": "Exited",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "requester",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "validator",
                    "type": "address"
                }
            ],
            "name": "RequestedExit",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "requester",
                    "type": "address"
                }
            ],
            "name": "RequestedRegistration",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "MINIMUM_DEPOSIT_AMOUNT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "activeItems",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "exit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getActiveItemsLength",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "length",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "items",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "makeActiveItems",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "validator",
                    "type": "address"
                }
            ],
            "name": "requestExit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "requestRegistration",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "validators",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "validator",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "start",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "enum ValidatorCollection.Status",
                    "name": "status",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "transactionHash": "0xaeabea1e94ce8f9e3ea055f44659f76ec33addedfcf8b3ccf344a20aa75448e6",
    "receipt": {
        "to": null,
        "from": "0xDc245797409fb79446523Fa1A4ca97294eef22EE",
        "contractAddress": "0x979a62090BDCff36F2e140F6915fbAdA7510cb6a",
        "transactionIndex": 0,
        "gasUsed": "1663720",
        "logsBloom": "0x
        "blockHash": "0x7039793d81552ba67e06218f8860259d3c3015c0db0b3aa950946833c1910730",
        "transactionHash": "0xaeabea1e94ce8f9e3ea055f44659f76ec33addedfcf8b3ccf344a20aa75448e6",
        "logs": [
            {
                "transactionIndex": 0,
                "blockNumber": 32,
                "transactionHash": "0xaeabea1e94ce8f9e3ea055f44659f76ec33addedfcf8b3ccf344a20aa75448e6",
                "address": "0x979a62090BDCff36F2e140F6915fbAdA7510cb6a",
                "topics": ["0x9930603eed0bddf6de5426e6993df500b100fe1a0fc649d811f98d2d9bc31f9f"],
                "data": "0x0000000000000000000000009e8549cc1b5b9036ac410ed11966bb3c6b94a77d0000000000000000000000000000000000000000000000000000000064d5c0fb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
                "logIndex": 0,
                "blockHash": "0x7039793d81552ba67e06218f8860259d3c3015c0db0b3aa950946833c1910730"
            },
            {
                "transactionIndex": 0,
                "blockNumber": 32,
                "transactionHash": "0xaeabea1e94ce8f9e3ea055f44659f76ec33addedfcf8b3ccf344a20aa75448e6",
                "address": "0x979a62090BDCff36F2e140F6915fbAdA7510cb6a",
                "topics": ["0x9930603eed0bddf6de5426e6993df500b100fe1a0fc649d811f98d2d9bc31f9f"],
                "data": "0x000000000000000000000000103cb97f47801563c875942510ff0585e31f55b50000000000000000000000000000000000000000000000000000000064d5c0fb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
                "logIndex": 1,
                "blockHash": "0x7039793d81552ba67e06218f8860259d3c3015c0db0b3aa950946833c1910730"
            },
            {
                "transactionIndex": 0,
                "blockNumber": 32,
                "transactionHash": "0xaeabea1e94ce8f9e3ea055f44659f76ec33addedfcf8b3ccf344a20aa75448e6",
                "address": "0x979a62090BDCff36F2e140F6915fbAdA7510cb6a",
                "topics": ["0x9930603eed0bddf6de5426e6993df500b100fe1a0fc649d811f98d2d9bc31f9f"],
                "data": "0x000000000000000000000000f49e8729c774f31eb1b7724e898bc9230a13e54c0000000000000000000000000000000000000000000000000000000064d5c0fb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
                "logIndex": 2,
                "blockHash": "0x7039793d81552ba67e06218f8860259d3c3015c0db0b3aa950946833c1910730"
            },
            {
                "transactionIndex": 0,
                "blockNumber": 32,
                "transactionHash": "0xaeabea1e94ce8f9e3ea055f44659f76ec33addedfcf8b3ccf344a20aa75448e6",
                "address": "0x979a62090BDCff36F2e140F6915fbAdA7510cb6a",
                "topics": ["0x9930603eed0bddf6de5426e6993df500b100fe1a0fc649d811f98d2d9bc31f9f"],
                "data": "0x000000000000000000000000a6ee9ddfa9b82df810b8e4afaa5ff04a267d49300000000000000000000000000000000000000000000000000000000064d5c0fb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
                "logIndex": 3,
                "blockHash": "0x7039793d81552ba67e06218f8860259d3c3015c0db0b3aa950946833c1910730"
            },
            {
                "transactionIndex": 0,
                "blockNumber": 32,
                "transactionHash": "0xaeabea1e94ce8f9e3ea055f44659f76ec33addedfcf8b3ccf344a20aa75448e6",
                "address": "0x979a62090BDCff36F2e140F6915fbAdA7510cb6a",
                "topics": ["0x9930603eed0bddf6de5426e6993df500b100fe1a0fc649d811f98d2d9bc31f9f"],
                "data": "0x000000000000000000000000898bf21a9e1ff51d3f1248e0a253f6a58c3a736a0000000000000000000000000000000000000000000000000000000064d5c0fb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
                "logIndex": 4,
                "blockHash": "0x7039793d81552ba67e06218f8860259d3c3015c0db0b3aa950946833c1910730"
            }
        ],
        "blockNumber": 32,
        "cumulativeGasUsed": "1663720",
        "status": 1,
        "byzantium": true
    },
    "args": [
        "0x4Ca91738C7cD24895467c6d550D96BE8dC4b33AA",
        [
            "0x9E8549cc1B5b9036AC410Ed11966BB3c6B94A77d",
            "0x103CB97f47801563C875942510Ff0585E31F55b5",
            "0xF49e8729c774f31eB1b7724E898BC9230a13E54c",
            "0xA6Ee9Ddfa9B82DF810b8E4AFaa5ff04A267d4930",
            "0x898Bf21a9e1fF51d3F1248E0A253f6A58C3a736a"
        ]
    ],
    "numDeployments": 1,
    "solcInputHash": "a7b1b71c1f5d4e04a8f1a0f0fa51eebb",
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_validators\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ValidatorCollection.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"Added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"Exited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"RequestedExit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"RequestedRegistration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_DEPOSIT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeItems\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveItemsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeActiveItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"requestExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"enum ValidatorCollection.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_validators\":\"\\ucd08\\uae30\\uc5d0 \\uc124\\uc815\\ub420 \\uac80\\uc99d\\uc790, \\uc608\\uce58\\uae08\\uc774 \\uc608\\uce58\\ub41c \\ud6c4 \\uadf8 \\uc989\\uc2dc \\ud65c\\uc131\\ud654 \\ub41c\\ub2e4.\"}},\"deposit(uint256)\":{\"params\":{\"_amount\":\"\\ucd94\\uac00\\ub85c \\uc785\\uae08\\ud560 \\uc608\\uce58 \\uae08\\uc561\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Added(address,uint256,uint256,uint8)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uac00 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"Deposited(address,uint256,uint256)\":{\"notice\":\"\\uc790\\uae08\\uc774 \\uc785\\uae09\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"Exited(address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\uc790\\ubc1c\\uc801 \\ud0c8\\ud1f4\\uac00 \\uc644\\ub8cc\\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"RequestedExit(address,address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c \\ud0c8\\ud1f4\\uac00 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"RequestedRegistration(address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\ub4f1\\ub85d\\uc774 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"}},\"kind\":\"user\",\"methods\":{\"activeItems(uint256)\":{\"notice\":\"\\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790 \\ub370\\uc774\\ud130\\uac00 \\uc800\\uc7a5\\ub418\\ub294 \\ubc30\\uc5f4\"},\"constructor\":{\"notice\":\"\\uc0dd\\uc131\\uc790\"},\"deposit(uint256)\":{\"notice\":\"\\uc608\\uce58\\uae08\\uc744 \\ucd94\\uac00\\ub85c \\uc785\\uae09\\ud569\\ub2c8\\ub2e4.\"},\"exit()\":{\"notice\":\"\\uc790\\ubc1c\\uc801\\uc73c\\ub85c \\ud0c8\\ud1f4\\ud558\\uae30 \\uc704\\ud574 \\uc0ac\\uc6a9\\ub418\\ub294 \\ud568\\uc218\\uc785\\ub2c8\\ub2e4.\"},\"getActiveItemsLength()\":{\"notice\":\"\\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\"},\"items(uint256)\":{\"notice\":\"\\uac80\\uc99d\\uc790 \\ub370\\uc774\\ud130\\uac00 \\uc800\\uc7a5\\ub418\\ub294 \\ubc30\\uc5f4\"},\"requestExit(address)\":{\"notice\":\"\\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c\\ud0c8\\ud1f4\\ub97c \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\"},\"requestRegistration()\":{\"notice\":\"\\uc2e0\\uaddc \\uac80\\uc99d\\uc790 \\ub4f1\\ub85d\\uc744 \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\"}},\"notice\":\"\\uac80\\uc99d\\uc790\\ub4e4\\uc744 \\uc800\\uc7a5\\ud558\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ValidatorCollection.sol\":\"ValidatorCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/ValidatorCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @notice \\uac80\\uc99d\\uc790\\ub4e4\\uc744 \\uc800\\uc7a5\\ud558\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\\ncontract ValidatorCollection {\\n    uint256 public constant MINIMUM_DEPOSIT_AMOUNT = 50000000000000000000000;\\n\\n    address private tokenAddress;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\ucf54\\ub4dc\\n    enum Status {\\n        INVALID, //  \\ucd08\\uae30\\uac12\\n        ACTIVE, //  \\uac80\\uc99d\\uc790\\uc758 \\uae30\\ub2a5\\uc774 \\ud65c\\uc131\\ud654\\ub428\\n        STOP, //  \\uc608\\uce58\\uae08 \\ubd80\\uc871\\uc73c\\ub85c \\uc815\\uc9c0\\ub41c \\uc0c1\\ud0dc\\n        EXIT //  \\ud0c8\\ud1f4\\ud55c \\uc0c1\\ud0dc\\n    }\\n\\n    struct ValidatorData {\\n        address validator; // \\uac80\\uc99d\\uc790\\uc758 \\uc9c0\\uac11\\uc8fc\\uc18c\\n        uint256 start; // \\uac80\\uc99d\\uc790\\ub85c\\uc11c \\uc5ed\\ud560\\uc744 \\uc218\\ud589\\ud560 \\uc218 \\uc788\\ub294 \\uc2dc\\uc791 \\uc2dc\\uac04\\n        uint256 balance; // \\uac80\\uc99d\\uc790\\uc758 \\uc608\\uce58\\uae08\\n        Status status; // \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790 \\ub370\\uc774\\ud130\\uac00 \\uc800\\uc7a5\\ub418\\ub294 \\ubc30\\uc5f4\\n    address[] public items;\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790 \\ub370\\uc774\\ud130\\uac00 \\uc800\\uc7a5\\ub418\\ub294 \\ubc30\\uc5f4\\n    address[] public activeItems;\\n\\n    mapping(address => ValidatorData) public validators;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uac00 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Added(address validator, uint256 start, uint256 balance, Status status);\\n    /// @notice \\uc790\\uae08\\uc774 \\uc785\\uae09\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Deposited(address validator, uint256 amount, uint256 balance);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\ub4f1\\ub85d\\uc774 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedRegistration(address requester);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c \\ud0c8\\ud1f4\\uac00 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedExit(address requester, address validator);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc790\\ubc1c\\uc801 \\ud0c8\\ud1f4\\uac00 \\uc644\\ub8cc\\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event Exited(address validator);\\n\\n    /// @notice \\uc0dd\\uc131\\uc790\\n    /// @param _validators \\ucd08\\uae30\\uc5d0 \\uc124\\uc815\\ub420 \\uac80\\uc99d\\uc790, \\uc608\\uce58\\uae08\\uc774 \\uc608\\uce58\\ub41c \\ud6c4 \\uadf8 \\uc989\\uc2dc \\ud65c\\uc131\\ud654 \\ub41c\\ub2e4.\\n    constructor(address _tokenAddress, address[] memory _validators) {\\n        tokenAddress = _tokenAddress;\\n\\n        for (uint256 i = 0; i < _validators.length; ++i) {\\n            ValidatorData memory item = ValidatorData({\\n                validator: _validators[i],\\n                start: block.timestamp,\\n                balance: 0,\\n                status: Status.STOP\\n            });\\n            items.push(_validators[i]);\\n            validators[_validators[i]] = item;\\n\\n            emit Added(item.validator, item.start, item.balance, item.status);\\n        }\\n    }\\n\\n    /// @notice \\uc608\\uce58\\uae08\\uc744 \\ucd94\\uac00\\ub85c \\uc785\\uae09\\ud569\\ub2c8\\ub2e4.\\n    /// @param _amount \\ucd94\\uac00\\ub85c \\uc785\\uae08\\ud560 \\uc608\\uce58 \\uae08\\uc561\\n    function deposit(uint256 _amount) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status != Status.INVALID, \\\"Not validator\\\");\\n        require(item.status != Status.EXIT, \\\"Already exited\\\");\\n\\n        IERC20 token = IERC20(tokenAddress);\\n        require(_amount <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), _amount);\\n\\n        validators[msg.sender].balance += _amount;\\n\\n        if (validators[msg.sender].balance >= MINIMUM_DEPOSIT_AMOUNT) validators[msg.sender].status = Status.ACTIVE;\\n\\n        emit Deposited(msg.sender, _amount, validators[msg.sender].balance);\\n    }\\n\\n    /// @notice \\uc2e0\\uaddc \\uac80\\uc99d\\uc790 \\ub4f1\\ub85d\\uc744 \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestRegistration() public {\\n        require(validators[msg.sender].status == Status.INVALID, \\\"Already validator\\\");\\n\\n        IERC20 token = IERC20(tokenAddress);\\n        require(MINIMUM_DEPOSIT_AMOUNT <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), MINIMUM_DEPOSIT_AMOUNT);\\n\\n        ValidatorData memory item = ValidatorData({\\n            validator: msg.sender,\\n            start: block.timestamp + 86500 * 7,\\n            balance: MINIMUM_DEPOSIT_AMOUNT,\\n            status: Status.ACTIVE\\n        });\\n\\n        items.push(msg.sender);\\n        validators[msg.sender] = item;\\n\\n        emit RequestedRegistration(msg.sender);\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c\\ud0c8\\ud1f4\\ub97c \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestExit(address validator) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        require(validators[validator].status != Status.INVALID, \\\"Not validator\\\");\\n        validators[validator].status = Status.EXIT;\\n\\n        if (validators[validator].balance > 0) {\\n            IERC20 token = IERC20(tokenAddress);\\n            token.transfer(validator, validators[validator].balance);\\n            validators[validator].balance = 0;\\n        }\\n\\n        emit RequestedExit(msg.sender, validator);\\n    }\\n\\n    function makeActiveItems() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        _makeActiveItems();\\n    }\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function getActiveItemsLength() public view returns (uint256 length) {\\n        return activeItems.length;\\n    }\\n\\n    function _makeActiveItems() internal {\\n        while (activeItems.length > 0) activeItems.pop();\\n        for (uint256 i = 0; i < items.length; ++i) {\\n            ValidatorData memory item = validators[items[i]];\\n\\n            if (item.status == Status.ACTIVE && item.start <= block.timestamp) {\\n                activeItems.push(items[i]);\\n            }\\n        }\\n    }\\n\\n    /// @notice \\uc790\\ubc1c\\uc801\\uc73c\\ub85c \\ud0c8\\ud1f4\\ud558\\uae30 \\uc704\\ud574 \\uc0ac\\uc6a9\\ub418\\ub294 \\ud568\\uc218\\uc785\\ub2c8\\ub2e4.\\n    function exit() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        makeActiveItems();\\n        require(activeItems.length > 1, \\\"Last validator\\\");\\n\\n        validators[msg.sender].status = Status.EXIT;\\n\\n        if (validators[msg.sender].balance > 0) {\\n            IERC20 token = IERC20(tokenAddress);\\n            token.transfer(msg.sender, validators[msg.sender].balance);\\n            validators[msg.sender].balance = 0;\\n        }\\n\\n        emit Exited(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x366f6846bbae2e598e1cf7359d55a54df42c5fe61b7b4245233cf21c5486612e\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063bfb231d211610076578063de4847c41161005b578063de4847c41461014c578063e9fad8ee14610154578063fa52c7d81461015c576100be565b8063bfb231d214610131578063c669413a14610144576100be565b80639c318c7b116100a75780639c318c7b146100f65780639d1da6df14610116578063b6b55f251461011e576100be565b806328cb1e38146100c35780636c622b2d146100d8575b600080fd5b6100d66100d136600461106c565b61017f565b005b6100e0610434565b6040516100ed919061130b565b60405180910390f35b6101096101043660046110ba565b610442565b6040516100ed91906110ea565b6100d661046c565b6100d661012c3660046110ba565b610587565b61010961013f3660046110ba565b6108e1565b6100d66108f1565b6100e0610be1565b6100d6610be7565b61016f61016a36600461106c565b610e4b565b6040516100ed9493929190611176565b336000908152600360208181526040808420815160808101835281546001600160a01b031681526001820154938101939093526002810154918301919091528083015491929091606084019160ff909116908111156101ee57634e487b7160e01b600052602160045260246000fd5b600381111561020d57634e487b7160e01b600052602160045260246000fd5b90525080519091506001600160a01b031633146102455760405162461bcd60e51b815260040161023c906111c1565b60405180910390fd5b60018160600151600381111561026b57634e487b7160e01b600052602160045260246000fd5b14801561027c575042816020015111155b6102985760405162461bcd60e51b815260040161023c906111f8565b6001600160a01b0382166000908152600360208190526040822081015460ff16908111156102d657634e487b7160e01b600052602160045260246000fd5b14156102f45760405162461bcd60e51b815260040161023c906111c1565b6001600160a01b0382166000908152600360208190526040909120808201805460ff191690921790915560020154156103f757600080546001600160a01b03848116835260036020526040928390206002015492517fa9059cbb000000000000000000000000000000000000000000000000000000008152911691829163a9059cbb916103869187919060040161113c565b602060405180830381600087803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d8919061109a565b50506001600160a01b0382166000908152600360205260408120600201555b7f04fdae38c753928c31a4e3ad6a0160460fc60d39ad3fa85273e284f9ecb0e70f33836040516104289291906110fe565b60405180910390a15050565b690a968163f0a57b40000081565b6002818154811061045257600080fd5b6000918252602090912001546001600160a01b0316905081565b336000908152600360208181526040808420815160808101835281546001600160a01b031681526001820154938101939093526002810154918301919091528083015491929091606084019160ff909116908111156104db57634e487b7160e01b600052602160045260246000fd5b60038111156104fa57634e487b7160e01b600052602160045260246000fd5b90525080519091506001600160a01b031633146105295760405162461bcd60e51b815260040161023c906111c1565b60018160600151600381111561054f57634e487b7160e01b600052602160045260246000fd5b148015610560575042816020015111155b61057c5760405162461bcd60e51b815260040161023c906111f8565b610584610e81565b50565b336000908152600360208181526040808420815160808101835281546001600160a01b031681526001820154938101939093526002810154918301919091528083015491929091606084019160ff909116908111156105f657634e487b7160e01b600052602160045260246000fd5b600381111561061557634e487b7160e01b600052602160045260246000fd5b90525080519091506001600160a01b031633146106445760405162461bcd60e51b815260040161023c906111c1565b60008160600151600381111561066a57634e487b7160e01b600052602160045260246000fd5b14156106885760405162461bcd60e51b815260040161023c906111c1565b6003816060015160038111156106ae57634e487b7160e01b600052602160045260246000fd5b14156106cc5760405162461bcd60e51b815260040161023c9061122f565b6000546040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690819063dd62ed3e9061071990339030906004016110fe565b60206040518083038186803b15801561073157600080fd5b505afa158015610745573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076991906110d2565b8311156107885760405162461bcd60e51b815260040161023c9061129d565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038216906323b872dd906107d190339030908890600401611118565b602060405180830381600087803b1580156107eb57600080fd5b505af11580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610823919061109a565b503360009081526003602052604081206002018054859290610846908490611314565b909155505033600090815260036020526040902060020154690a968163f0a57b4000001161088d5733600090815260036020819052604090912001805460ff191660011790555b33600081815260036020526040908190206002015490517f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca926108d4929091879190611155565b60405180910390a1505050565b6001818154811061045257600080fd5b336000908152600360208190526040822081015460ff169081111561092657634e487b7160e01b600052602160045260246000fd5b146109435760405162461bcd60e51b815260040161023c906112d4565b6000546040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690819063dd62ed3e9061099090339030906004016110fe565b60206040518083038186803b1580156109a857600080fd5b505afa1580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e091906110d2565b690a968163f0a57b4000001115610a095760405162461bcd60e51b815260040161023c9061129d565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038216906323b872dd90610a5c9033903090690a968163f0a57b40000090600401611118565b602060405180830381600087803b158015610a7657600080fd5b505af1158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae919061109a565b50604080516080810190915233815260009060208101610ad14262093d3c611314565b8152690a968163f0a57b4000006020820152604001600190526001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180543373ffffffffffffffffffffffffffffffffffffffff199182168117909255600091825260036020818152604093849020865181549094166001600160a01b039094169390931783558501518285015591840151600282015560608401518183018054959650869592949193909260ff191691908490811115610baa57634e487b7160e01b600052602160045260246000fd5b02179055509050507f95c8728c4a5263b7ef06587e3ed59ba327631f357d17bf5230ded395bd570b7f3360405161042891906110ea565b60025490565b336000908152600360208181526040808420815160808101835281546001600160a01b031681526001820154938101939093526002810154918301919091528083015491929091606084019160ff90911690811115610c5657634e487b7160e01b600052602160045260246000fd5b6003811115610c7557634e487b7160e01b600052602160045260246000fd5b90525080519091506001600160a01b03163314610ca45760405162461bcd60e51b815260040161023c906111c1565b600181606001516003811115610cca57634e487b7160e01b600052602160045260246000fd5b148015610cdb575042816020015111155b610cf75760405162461bcd60e51b815260040161023c906111f8565b610cff61046c565b600254600110610d215760405162461bcd60e51b815260040161023c90611266565b336000908152600360208190526040909120808201805460ff19169092179091556002015415610e1157600080543380835260036020526040928390206002015492517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0390921692839263a9059cbb92610da992909160040161113c565b602060405180830381600087803b158015610dc357600080fd5b505af1158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb919061109a565b5050336000908152600360205260408120600201555b7faa5cfc974bd759f818e3e18a4afc9d79daaa0722158497792100a1fddd13e19333604051610e4091906110ea565b60405180910390a150565b600360208190526000918252604090912080546001820154600283015492909301546001600160a01b0390911692919060ff1684565b60025415610edc576002805480610ea857634e487b7160e01b600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055610e81565b60005b6001548110156105845760006003600060018481548110610f1057634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160808101845281549094168452600181015491840191909152600281015491830191909152600380820154606084019160ff90911690811115610f8f57634e487b7160e01b600052602160045260246000fd5b6003811115610fae57634e487b7160e01b600052602160045260246000fd5b9052509050600181606001516003811115610fd957634e487b7160e01b600052602160045260246000fd5b148015610fea575042816020015111155b1561105b5760026001838154811061101257634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015483546001810185559383529120909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790555b506110658161132c565b9050610edf565b60006020828403121561107d578081fd5b81356001600160a01b0381168114611093578182fd5b9392505050565b6000602082840312156110ab578081fd5b81518015158114611093578182fd5b6000602082840312156110cb578081fd5b5035919050565b6000602082840312156110e3578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b0385168152602081018490526040810183905260808101600483106111b257634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b6020808252600d908201527f4e6f742076616c696461746f7200000000000000000000000000000000000000604082015260600190565b60208082526011908201527f496e76616c69642076616c696461746f72000000000000000000000000000000604082015260600190565b6020808252600e908201527f416c726561647920657869746564000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4c6173742076616c696461746f72000000000000000000000000000000000000604082015260600190565b60208082526013908201527f4e6f7420616c6c6f776564206465706f73697400000000000000000000000000604082015260600190565b60208082526011908201527f416c72656164792076616c696461746f72000000000000000000000000000000604082015260600190565b90815260200190565b6000821982111561132757611327611347565b500190565b600060001982141561134057611340611347565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220311d5b300e623853007f9ad94de7911d569481ec4297d82ac7afbc7671f32a7164736f6c63430008000033",
    "devdoc": {
        "kind": "dev",
        "methods": {
            "constructor": {
                "params": {
                    "_validators": "초기에 설정될 검증자, 예치금이 예치된 후 그 즉시 활성화 된다."
                }
            },
            "deposit(uint256)": {
                "params": {
                    "_amount": "추가로 입금할 예치 금액"
                }
            }
        },
        "version": 1
    },
    "userdoc": {
        "events": {
            "Added(address,uint256,uint256,uint8)": {
                "notice": "검증자가 추가될 때 발생되는 이벤트"
            },
            "Deposited(address,uint256,uint256)": {
                "notice": "자금이 입급될 때 발생되는 이벤트"
            },
            "Exited(address)": {
                "notice": "검증자의 자발적 탈퇴가 완료되었을 때 발생되는 이벤트"
            },
            "RequestedExit(address,address)": {
                "notice": "검증자의 강제 탈퇴가 요청 되었을 때 발생되는 이벤트"
            },
            "RequestedRegistration(address)": {
                "notice": "검증자의 등록이 요청 되었을 때 발생되는 이벤트"
            }
        },
        "kind": "user",
        "methods": {
            "activeItems(uint256)": {
                "notice": "유효한 검증자 데이터가 저장되는 배열"
            },
            "constructor": {
                "notice": "생성자"
            },
            "deposit(uint256)": {
                "notice": "예치금을 추가로 입급합니다."
            },
            "exit()": {
                "notice": "자발적으로 탈퇴하기 위해 사용되는 함수입니다."
            },
            "getActiveItemsLength()": {
                "notice": "유효한 검증자의 수를 리턴합니다."
            },
            "items(uint256)": {
                "notice": "검증자 데이터가 저장되는 배열"
            },
            "requestExit(address)": {
                "notice": "검증자의 강제탈퇴를 신청합니다."
            },
            "requestRegistration()": {
                "notice": "신규 검증자 등록을 신청합니다."
            }
        },
        "notice": "검증자들을 저장하는 컨트랙트",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 3780,
                "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
                "label": "tokenAddress",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
            },
            {
                "astId": 3799,
                "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
                "label": "items",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 3803,
                "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
                "label": "activeItems",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 3808,
                "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
                "label": "validators",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_struct(ValidatorData)3795_storage)"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_enum(Status)3785": {
                "encoding": "inplace",
                "label": "enum ValidatorCollection.Status",
                "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(ValidatorData)3795_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct ValidatorCollection.ValidatorData)",
                "numberOfBytes": "32",
                "value": "t_struct(ValidatorData)3795_storage"
            },
            "t_struct(ValidatorData)3795_storage": {
                "encoding": "inplace",
                "label": "struct ValidatorCollection.ValidatorData",
                "members": [
                    {
                        "astId": 3787,
                        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
                        "label": "validator",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 3789,
                        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
                        "label": "start",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 3791,
                        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
                        "label": "balance",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 3794,
                        "contract": "contracts/ValidatorCollection.sol:ValidatorCollection",
                        "label": "status",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_enum(Status)3785"
                    }
                ],
                "numberOfBytes": "128"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
