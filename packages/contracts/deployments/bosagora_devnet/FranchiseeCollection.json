{
  "address": "0x3705f330B593b28B3663a3C4BC2c7C5565988d18",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "franchiseeId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "provideWaitTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "email",
          "type": "bytes32"
        }
      ],
      "name": "AddedFranchisee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "franchiseeId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increase",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "purchaseId",
          "type": "string"
        }
      ],
      "name": "IncreasedClearedMileage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "franchiseeId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increase",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "purchaseId",
          "type": "string"
        }
      ],
      "name": "IncreasedProvidedMileage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "franchiseeId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increase",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "purchaseId",
          "type": "string"
        }
      ],
      "name": "IncreasedUsedMileage",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NULL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_payoutWaitTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_email",
          "type": "bytes32"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_purchaseId",
          "type": "string"
        }
      ],
      "name": "addClearedMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_purchaseId",
          "type": "string"
        }
      ],
      "name": "addProvidedMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_purchaseId",
          "type": "string"
        }
      ],
      "name": "addUsedMileage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_idx",
          "type": "uint256"
        }
      ],
      "name": "franchiseeIdOf",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        }
      ],
      "name": "franchiseeOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "franchiseeId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "provideWaitTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "email",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "providedMileage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "usedMileage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "clearedMileage",
              "type": "uint256"
            },
            {
              "internalType": "enum FranchiseeCollection.FranchiseeStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct FranchiseeCollection.FranchiseeData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "franchiseesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_franchiseeId",
          "type": "string"
        }
      ],
      "name": "getClearMileage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ledgerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ledgerAddress",
          "type": "address"
        }
      ],
      "name": "setLedgerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd1796461bfae83d12048d5869f6591b067f2dc63a8c4945b3aaa50e3c37f9fb8",
  "receipt": {
    "to": null,
    "from": "0xDc245797409fb79446523Fa1A4ca97294eef22EE",
    "contractAddress": "0x3705f330B593b28B3663a3C4BC2c7C5565988d18",
    "transactionIndex": 0,
    "gasUsed": "1198381",
    "logsBloom": "0x
    "blockHash": "0xfb74555cc8046a6ec169de4ba957ee445ded22c40f5ffb7c5c98a2183e154af1",
    "transactionHash": "0xd1796461bfae83d12048d5869f6591b067f2dc63a8c4945b3aaa50e3c37f9fb8",
    "logs": [],
    "blockNumber": 456,
    "cumulativeGasUsed": "1198381",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x43Bc973075748Afc704D9b59B156f9b9E24b73fb"
  ],
  "numDeployments": 1,
  "solcInputHash": "4c3ead770cff565744f09e7c581581e7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"provideWaitTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"email\",\"type\":\"bytes32\"}],\"name\":\"AddedFranchisee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"purchaseId\",\"type\":\"string\"}],\"name\":\"IncreasedClearedMileage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"purchaseId\",\"type\":\"string\"}],\"name\":\"IncreasedProvidedMileage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"purchaseId\",\"type\":\"string\"}],\"name\":\"IncreasedUsedMileage\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NULL\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_payoutWaitTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_email\",\"type\":\"bytes32\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_purchaseId\",\"type\":\"string\"}],\"name\":\"addClearedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_purchaseId\",\"type\":\"string\"}],\"name\":\"addProvidedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_purchaseId\",\"type\":\"string\"}],\"name\":\"addUsedMileage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"franchiseeIdOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"}],\"name\":\"franchiseeOf\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"franchiseeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"provideWaitTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"email\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"providedMileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usedMileage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"clearedMileage\",\"type\":\"uint256\"},{\"internalType\":\"enum FranchiseeCollection.FranchiseeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct FranchiseeCollection.FranchiseeData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"franchiseesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_franchiseeId\",\"type\":\"string\"}],\"name\":\"getClearMileage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ledgerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ledgerAddress\",\"type\":\"address\"}],\"name\":\"setLedgerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(string,uint256,bytes32)\":{\"params\":{\"_email\":\"\\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\",\"_franchiseeId\":\"\\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\",\"_payoutWaitTime\":\"\\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc9c0\\uae09\\ub420 \\uc2dc\\uac04\"}},\"constructor\":{\"params\":{\"_validatorAddress\":\"\\uac80\\uc99d\\uc790\\uceec\\ub799\\uc158\\uc758 \\uc8fc\\uc18c\"}},\"franchiseeIdOf(uint256)\":{\"params\":{\"_idx\":\"\\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\"}},\"franchiseeOf(string)\":{\"params\":{\"_franchiseeId\":\"\\uac00\\ub9f9\\uc810\\uc758 \\uc544\\uc774\\ub514\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AddedFranchisee(string,uint256,bytes32)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc774 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedClearedMileage(string,uint256,uint256,string)\":{\"notice\":\"\\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedProvidedMileage(string,uint256,uint256,string)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"},\"IncreasedUsedMileage(string,uint256,uint256,string)\":{\"notice\":\"\\uc0ac\\uc6a9\\uc790\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\"}},\"kind\":\"user\",\"methods\":{\"NULL()\":{\"notice\":\"Hash value of a blank string\"},\"add(string,uint256,bytes32)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc744 \\ucd94\\uac00\\ud55c\\ub2e4\"},\"addClearedMileage(string,uint256,string)\":{\"notice\":\"\\uc815\\uc0b0\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"addProvidedMileage(string,uint256,string)\":{\"notice\":\"\\uc9c0\\uae09\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"addUsedMileage(string,uint256,string)\":{\"notice\":\"\\uc0ac\\uc6a9\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\"},\"constructor\":{\"notice\":\"\\uc0dd\\uc131\\uc790\"},\"franchiseeIdOf(uint256)\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc758 \\uc544\\uc774\\ub514\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\"},\"franchiseeOf(string)\":{\"notice\":\"\\uac00\\ub9f9\\uc810 \\ub370\\uc774\\ud130\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\"},\"franchiseesLength()\":{\"notice\":\"\\uac00\\ub9f9\\uc810\\uc758 \\uac2f\\uc218\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\"},\"getClearMileage(string)\":{\"notice\":\"\\uc815\\uc0b0\\ub418\\uc5b4\\uc57c \\ud560 \\ub9c8\\uc77c\\uc9c0\\ub9ac\\uc758 \\ub7c9\\uc744 \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\"},\"setLedgerAddress(address)\":{\"notice\":\"\\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc8fc\\uc18c\\ub97c \\ud638\\ucd9c\\ud55c\\ub2e4.\"}},\"notice\":\"\\uac00\\ub9f9\\uc810\\uceec\\ub799\\uc158\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FranchiseeCollection.sol\":\"FranchiseeCollection\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FranchiseeCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ValidatorCollection.sol\\\";\\n\\n/// @notice \\uac00\\ub9f9\\uc810\\uceec\\ub799\\uc158\\ncontract FranchiseeCollection {\\n    /// @notice Hash value of a blank string\\n    bytes32 public constant NULL = 0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\ucf54\\ub4dc\\n    enum FranchiseeStatus {\\n        INVALID,\\n        ACTIVE\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\ub370\\uc774\\ud130\\n    struct FranchiseeData {\\n        string franchiseeId; // \\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\n        uint256 provideWaitTime; // \\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\uc9c0\\uae09\\uc2dc\\uac04\\n        bytes32 email; // \\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\\n        uint256 providedMileage; // \\uc81c\\uacf5\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        uint256 usedMileage; // \\uc0ac\\uc6a9\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        uint256 clearedMileage; // \\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uc9c0 \\ucd1d\\ub7c9\\n        FranchiseeStatus status;\\n    }\\n\\n    mapping(string => FranchiseeData) private franchisees;\\n\\n    string[] private items;\\n\\n    address public validatorAddress;\\n    ValidatorCollection private validatorCollection;\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc774 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event AddedFranchisee(string franchiseeId, uint256 provideWaitTime, bytes32 email);\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedProvidedMileage(string franchiseeId, uint256 increase, uint256 total, string purchaseId);\\n    /// @notice \\uc0ac\\uc6a9\\uc790\\uc758 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedUsedMileage(string franchiseeId, uint256 increase, uint256 total, string purchaseId);\\n    /// @notice \\uc815\\uc0b0\\ub41c \\ub9c8\\uc77c\\ub9ac\\uac00 \\uc99d\\uac00\\ud560 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event IncreasedClearedMileage(string franchiseeId, uint256 increase, uint256 total, string purchaseId);\\n\\n    address public ledgerAddress;\\n    address public deployer;\\n\\n    /// @notice \\uc0dd\\uc131\\uc790\\n    /// @param _validatorAddress \\uac80\\uc99d\\uc790\\uceec\\ub799\\uc158\\uc758 \\uc8fc\\uc18c\\n    constructor(address _validatorAddress) {\\n        validatorAddress = _validatorAddress;\\n\\n        validatorCollection = ValidatorCollection(_validatorAddress);\\n        ledgerAddress = address(0x00);\\n        deployer = msg.sender;\\n    }\\n\\n    /// @notice \\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc8fc\\uc18c\\ub97c \\ud638\\ucd9c\\ud55c\\ub2e4.\\n    function setLedgerAddress(address _ledgerAddress) public {\\n        require(msg.sender == deployer, \\\"No permissions\\\");\\n        ledgerAddress = _ledgerAddress;\\n        deployer = address(0x00);\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\ub4e4\\ub9cc \\ud638\\ucd9c\\ud560 \\uc218 \\uc788\\ub3c4\\ub85d \\ud574\\uc900\\ub2e4.\\n    modifier onlyValidator(address _account) {\\n        bool isValidator = false;\\n        for (uint256 i = 0; i < validatorCollection.activeItemsLength(); ++i) {\\n            if (_account == validatorCollection.activeItemOf(i)) {\\n                isValidator = true;\\n                break;\\n            }\\n        }\\n        require(isValidator, \\\"Not validator\\\");\\n        _;\\n    }\\n\\n    /// @notice \\uc6d0\\uc7a5 \\ucee8\\ud2b8\\ub799\\ud2b8\\uc5d0\\uc11c\\ub9cc \\ud638\\ucd9c\\ub420 \\uc218 \\uc788\\ub3c4\\ub85d \\ud574\\uc900\\ub2e4.\\n    modifier onlyLedger() {\\n        require(msg.sender == ledgerAddress, \\\"Not ledger\\\");\\n        _;\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc744 \\ucd94\\uac00\\ud55c\\ub2e4\\n    /// @param _franchiseeId \\uac00\\ub9f9\\uc810 \\uc544\\uc774\\ub514\\n    /// @param _payoutWaitTime \\uc81c\\ud488\\uad6c\\ub9e4 \\ud6c4 \\ub9c8\\uc77c\\ub9ac\\uc9c0\\uac00 \\uc9c0\\uae09\\ub420 \\uc2dc\\uac04\\n    /// @param _email \\uac00\\ub9f9\\uc810\\uc8fc \\uc774\\uba54\\uc77c \\ud574\\uc2dc\\n    function add(\\n        string memory _franchiseeId,\\n        uint256 _payoutWaitTime,\\n        bytes32 _email\\n    ) public onlyValidator(msg.sender) {\\n        _add(_franchiseeId, _payoutWaitTime, _email);\\n    }\\n\\n    function _add(string memory _franchiseeId, uint256 _payoutWaitTime, bytes32 _email) internal {\\n        FranchiseeData memory data = FranchiseeData({\\n            franchiseeId: _franchiseeId,\\n            provideWaitTime: _payoutWaitTime,\\n            email: _email,\\n            providedMileage: 0,\\n            usedMileage: 0,\\n            clearedMileage: 0,\\n            status: FranchiseeStatus.ACTIVE\\n        });\\n        items.push(_franchiseeId);\\n        franchisees[_franchiseeId] = data;\\n\\n        emit AddedFranchisee(_franchiseeId, _payoutWaitTime, _email);\\n    }\\n\\n    /// @notice \\uc9c0\\uae09\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addProvidedMileage(\\n        string memory _franchiseeId,\\n        uint256 _amount,\\n        string memory _purchaseId\\n    ) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.INVALID) {\\n            _add(_franchiseeId, 0, NULL);\\n        }\\n\\n        franchisees[_franchiseeId].providedMileage += _amount;\\n        emit IncreasedProvidedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].providedMileage, _purchaseId);\\n    }\\n\\n    /// @notice \\uc0ac\\uc6a9\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addUsedMileage(string memory _franchiseeId, uint256 _amount, string memory _purchaseId) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.INVALID) {\\n            _add(_franchiseeId, 0, NULL);\\n        }\\n        franchisees[_franchiseeId].usedMileage += _amount;\\n        emit IncreasedUsedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].usedMileage, _purchaseId);\\n    }\\n\\n    /// @notice \\uc815\\uc0b0\\ub41c \\ucd1d \\ub9c8\\uc77c\\uc9c0\\ub9ac\\ub97c \\ub204\\uc801\\ud55c\\ub2e4\\n    function addClearedMileage(\\n        string memory _franchiseeId,\\n        uint256 _amount,\\n        string memory _purchaseId\\n    ) public onlyLedger {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.INVALID) {\\n            _add(_franchiseeId, 0, NULL);\\n        }\\n        franchisees[_franchiseeId].clearedMileage += _amount;\\n        emit IncreasedClearedMileage(_franchiseeId, _amount, franchisees[_franchiseeId].clearedMileage, _purchaseId);\\n    }\\n\\n    /// @notice \\uc815\\uc0b0\\ub418\\uc5b4\\uc57c \\ud560 \\ub9c8\\uc77c\\uc9c0\\ub9ac\\uc758 \\ub7c9\\uc744 \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function getClearMileage(string memory _franchiseeId) public view returns (uint256) {\\n        if (franchisees[_franchiseeId].status == FranchiseeStatus.ACTIVE) {\\n            FranchiseeData memory data = franchisees[_franchiseeId];\\n            if (data.providedMileage + data.clearedMileage < data.usedMileage) {\\n                return (data.usedMileage - data.providedMileage - data.clearedMileage);\\n            } else {\\n                return 0;\\n            }\\n        } else {\\n            return 0;\\n        }\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810 \\ub370\\uc774\\ud130\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\\n    /// @param _franchiseeId \\uac00\\ub9f9\\uc810\\uc758 \\uc544\\uc774\\ub514\\n    function franchiseeOf(string memory _franchiseeId) public view returns (FranchiseeData memory) {\\n        return franchisees[_franchiseeId];\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\uc544\\uc774\\ub514\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\\n    /// @param _idx \\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\\n    function franchiseeIdOf(uint256 _idx) public view returns (string memory) {\\n        return items[_idx];\\n    }\\n\\n    /// @notice \\uac00\\ub9f9\\uc810\\uc758 \\uac2f\\uc218\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4\\n    function franchiseesLength() public view returns (uint256) {\\n        return items.length;\\n    }\\n}\\n\",\"keccak256\":\"0x7eac3af1e8fe4cfc2f83cec253d6123b52c37d8a5070f574b48a2b31e8ceb55e\",\"license\":\"MIT\"},\"contracts/ValidatorCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @notice \\uac80\\uc99d\\uc790\\ub4e4\\uc744 \\uc800\\uc7a5\\ud558\\ub294 \\ucee8\\ud2b8\\ub799\\ud2b8\\ncontract ValidatorCollection {\\n    uint256 public constant MINIMUM_DEPOSIT_AMOUNT = 50000000000000000000000;\\n\\n    address public tokenAddress;\\n\\n    IERC20 private token;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\ucf54\\ub4dc\\n    enum Status {\\n        INVALID, //  \\ucd08\\uae30\\uac12\\n        ACTIVE, //  \\uac80\\uc99d\\uc790\\uc758 \\uae30\\ub2a5\\uc774 \\ud65c\\uc131\\ud654\\ub428\\n        STOP, //  \\uc608\\uce58\\uae08 \\ubd80\\uc871\\uc73c\\ub85c \\uc815\\uc9c0\\ub41c \\uc0c1\\ud0dc\\n        EXIT //  \\ud0c8\\ud1f4\\ud55c \\uc0c1\\ud0dc\\n    }\\n\\n    struct ValidatorData {\\n        address validator; // \\uac80\\uc99d\\uc790\\uc758 \\uc9c0\\uac11\\uc8fc\\uc18c\\n        uint256 start; // \\uac80\\uc99d\\uc790\\ub85c\\uc11c \\uc5ed\\ud560\\uc744 \\uc218\\ud589\\ud560 \\uc218 \\uc788\\ub294 \\uc2dc\\uc791 \\uc2dc\\uac04\\n        uint256 balance; // \\uac80\\uc99d\\uc790\\uc758 \\uc608\\uce58\\uae08\\n        Status status; // \\uac80\\uc99d\\uc790\\uc758 \\uc0c1\\ud0dc\\n    }\\n\\n    address[] private items;\\n\\n    address[] private activeItems;\\n\\n    mapping(address => ValidatorData) private validators;\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uac00 \\ucd94\\uac00\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event AddedValidator(address validator, uint256 start, uint256 balance, Status status);\\n    /// @notice \\uc790\\uae08\\uc774 \\uc785\\uae09\\ub420 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event DepositedForValidator(address validator, uint256 amount, uint256 balance);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\ub4f1\\ub85d\\uc774 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedToJoinValidator(address requester);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c \\ud0c8\\ud1f4\\uac00 \\uc694\\uccad \\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event RequestedToExitValidator(address requester, address validator);\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uc790\\ubc1c\\uc801 \\ud0c8\\ud1f4\\uac00 \\uc644\\ub8cc\\ub418\\uc5c8\\uc744 \\ub54c \\ubc1c\\uc0dd\\ub418\\ub294 \\uc774\\ubca4\\ud2b8\\n    event ExitedFromValidator(address validator);\\n\\n    /// @notice \\uc0dd\\uc131\\uc790\\n    /// @param _validators \\ucd08\\uae30\\uc5d0 \\uc124\\uc815\\ub420 \\uac80\\uc99d\\uc790, \\uc608\\uce58\\uae08\\uc774 \\uc608\\uce58\\ub41c \\ud6c4 \\uadf8 \\uc989\\uc2dc \\ud65c\\uc131\\ud654 \\ub41c\\ub2e4.\\n    constructor(address _tokenAddress, address[] memory _validators) {\\n        tokenAddress = _tokenAddress;\\n        token = IERC20(_tokenAddress);\\n\\n        for (uint256 i = 0; i < _validators.length; ++i) {\\n            ValidatorData memory item = ValidatorData({\\n                validator: _validators[i],\\n                start: block.timestamp,\\n                balance: 0,\\n                status: Status.STOP\\n            });\\n            items.push(_validators[i]);\\n            validators[_validators[i]] = item;\\n\\n            emit AddedValidator(item.validator, item.start, item.balance, item.status);\\n        }\\n    }\\n\\n    /// @notice \\uc608\\uce58\\uae08\\uc744 \\ucd94\\uac00\\ub85c \\uc785\\uae09\\ud569\\ub2c8\\ub2e4.\\n    /// @param _amount \\ucd94\\uac00\\ub85c \\uc785\\uae08\\ud560 \\uc608\\uce58 \\uae08\\uc561\\n    function deposit(uint256 _amount) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status != Status.INVALID, \\\"Not validator\\\");\\n        require(item.status != Status.EXIT, \\\"Already exited\\\");\\n\\n        require(_amount <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), _amount);\\n\\n        validators[msg.sender].balance += _amount;\\n\\n        if (validators[msg.sender].balance >= MINIMUM_DEPOSIT_AMOUNT) validators[msg.sender].status = Status.ACTIVE;\\n\\n        emit DepositedForValidator(msg.sender, _amount, validators[msg.sender].balance);\\n    }\\n\\n    /// @notice \\uc2e0\\uaddc \\uac80\\uc99d\\uc790 \\ub4f1\\ub85d\\uc744 \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestRegistration() public {\\n        require(validators[msg.sender].status == Status.INVALID, \\\"Already validator\\\");\\n\\n        require(MINIMUM_DEPOSIT_AMOUNT <= token.allowance(msg.sender, address(this)), \\\"Not allowed deposit\\\");\\n        token.transferFrom(msg.sender, address(this), MINIMUM_DEPOSIT_AMOUNT);\\n\\n        ValidatorData memory item = ValidatorData({\\n            validator: msg.sender,\\n            start: block.timestamp + 86500 * 7,\\n            balance: MINIMUM_DEPOSIT_AMOUNT,\\n            status: Status.ACTIVE\\n        });\\n\\n        items.push(msg.sender);\\n        validators[msg.sender] = item;\\n\\n        emit RequestedToJoinValidator(msg.sender);\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\uac15\\uc81c\\ud0c8\\ud1f4\\ub97c \\uc2e0\\uccad\\ud569\\ub2c8\\ub2e4.\\n    function requestExit(address validator) public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        require(validators[validator].status != Status.INVALID, \\\"Not validator\\\");\\n        validators[validator].status = Status.EXIT;\\n\\n        if (validators[validator].balance > 0) {\\n            token.transfer(validator, validators[validator].balance);\\n            validators[validator].balance = 0;\\n        }\\n\\n        emit RequestedToExitValidator(msg.sender, validator);\\n    }\\n\\n    function makeActiveItems() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        _makeActiveItems();\\n    }\\n\\n    /// @notice \\ub4f1\\ub85d\\ub41c \\uac80\\uc99d\\uc790\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4.\\n    /// @param _idx \\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\\n    function itemOf(uint256 _idx) public view returns (address) {\\n        return items[_idx];\\n    }\\n\\n    /// @notice \\ub4f1\\ub85d\\ub41c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function itemsLength() public view returns (uint256) {\\n        return items.length;\\n    }\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\ub97c \\ub9ac\\ud134\\ud55c\\ub2e4.\\n    /// @param _idx \\ubc30\\uc5f4\\uc758 \\uc21c\\ubc88\\n    function activeItemOf(uint256 _idx) public view returns (address) {\\n        return activeItems[_idx];\\n    }\\n\\n    /// @notice \\uc720\\ud6a8\\ud55c \\uac80\\uc99d\\uc790\\uc758 \\uc218\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    function activeItemsLength() public view returns (uint256) {\\n        return activeItems.length;\\n    }\\n\\n    /// @notice \\uac80\\uc99d\\uc790\\uc758 \\ub370\\uc774\\ud0c0\\ub97c \\ub9ac\\ud134\\ud569\\ub2c8\\ub2e4.\\n    /// @param _account \\uc9c0\\uac11\\uc8fc\\uc18c\\n    function validatorOf(address _account) public view returns (ValidatorData memory) {\\n        return validators[_account];\\n    }\\n\\n    function _makeActiveItems() internal {\\n        while (activeItems.length > 0) activeItems.pop();\\n        for (uint256 i = 0; i < items.length; ++i) {\\n            ValidatorData memory item = validators[items[i]];\\n\\n            if (item.status == Status.ACTIVE && item.start <= block.timestamp) {\\n                activeItems.push(items[i]);\\n            }\\n        }\\n    }\\n\\n    /// @notice \\uc790\\ubc1c\\uc801\\uc73c\\ub85c \\ud0c8\\ud1f4\\ud558\\uae30 \\uc704\\ud574 \\uc0ac\\uc6a9\\ub418\\ub294 \\ud568\\uc218\\uc785\\ub2c8\\ub2e4.\\n    function exit() public {\\n        ValidatorData memory item = validators[msg.sender];\\n        require(item.validator == msg.sender, \\\"Not validator\\\");\\n        require(item.status == Status.ACTIVE && item.start <= block.timestamp, \\\"Invalid validator\\\");\\n\\n        makeActiveItems();\\n        require(activeItems.length > 1, \\\"Last validator\\\");\\n\\n        validators[msg.sender].status = Status.EXIT;\\n\\n        if (validators[msg.sender].balance > 0) {\\n            token.transfer(msg.sender, validators[msg.sender].balance);\\n            validators[msg.sender].balance = 0;\\n        }\\n\\n        emit ExitedFromValidator(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0xa79020a5d87cfd8d3379f610b3d6b166da8115bf069042de8183a8e2c094853b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c8063a6cd52f51161008c578063ba9e92d111610066578063ba9e92d1146101ab578063d1d20056146101cb578063d5f39488146101d3578063f26be3fc146101db576100df565b8063a6cd52f514610172578063b023e1cc14610185578063ba891f5c14610198576100df565b80634a9c2fcf116100bd5780634a9c2fcf1461012c5780635d404c6a1461014c57806377f60f371461015f576100df565b8063094d497a146100e45780633fe4676e1461010257806349cd54ab14610117575b600080fd5b6100ec6101e3565b6040516100f99190611082565b60405180910390f35b61010a6101e9565b6040516100f9919061106e565b61012a610125366004610f8c565b6101f8565b005b61013f61013a366004610f05565b61033b565b6040516100f991906111a4565b6100ec61015a366004610f05565b610486565b61012a61016d366004610f8c565b610670565b61012a610180366004610f8c565b61079d565b61012a610193366004610f40565b6108ca565b61012a6101a6366004610ec6565b610a57565b6101be6101b9366004610ff6565b610ac2565b6040516100f9919061108b565b61010a610b7f565b61010a610b8e565b6100ec610b9d565b60015490565b6002546001600160a01b031681565b6004546001600160a01b0316331461022b5760405162461bcd60e51b81526004016102229061116d565b60405180910390fd5b6000808460405161023c9190611052565b9081526040519081900360200190206006015460ff16600181111561027157634e487b7160e01b600052602160045260246000fd5b14156102a3576102a38360007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bc1565b816000846040516102b49190611052565b908152602001604051809103902060050160008282546102d49190611226565b925050819055507f0ac277c5c4fe6d32e4031b2eda8cded4bb123e8df4b21c5c9cd424d36077ba95838360008660405161030e9190611052565b9081526040519081900360200181206005015461032e93929186906110c3565b60405180910390a1505050565b610343610d4e565b6000826040516103539190611052565b90815260200160405180910390206040518060e001604052908160008201805461037c90611285565b80601f01602080910402602001604051908101604052809291908181526020018280546103a890611285565b80156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b50505091835250506001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c09092019160ff169081111561045c57634e487b7160e01b600052602160045260246000fd5b600181111561047b57634e487b7160e01b600052602160045260246000fd5b90525090505b919050565b6000600160008360405161049a9190611052565b9081526040519081900360200190206006015460ff1660018111156104cf57634e487b7160e01b600052602160045260246000fd5b141561066857600080836040516104e69190611052565b90815260200160405180910390206040518060e001604052908160008201805461050f90611285565b80601f016020809104026020016040519081016040528092919081815260200182805461053b90611285565b80156105885780601f1061055d57610100808354040283529160200191610588565b820191906000526020600020905b81548152906001019060200180831161056b57829003601f168201915b50505091835250506001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c09092019160ff16908111156105ef57634e487b7160e01b600052602160045260246000fd5b600181111561060e57634e487b7160e01b600052602160045260246000fd5b81525050905080608001518160a00151826060015161062d9190611226565b101561065e578060a001518160600151826080015161064c919061123e565b610656919061123e565b915050610481565b6000915050610481565b506000610481565b6004546001600160a01b0316331461069a5760405162461bcd60e51b81526004016102229061116d565b600080846040516106ab9190611052565b9081526040519081900360200190206006015460ff1660018111156106e057634e487b7160e01b600052602160045260246000fd5b1415610712576107128360007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bc1565b816000846040516107239190611052565b908152602001604051809103902060040160008282546107439190611226565b925050819055507fb360df333d5be540e314fc839fb4a7e1485718ff0b2e23b45b2519c22615546f838360008660405161077d9190611052565b9081526040519081900360200181206004015461032e93929186906110c3565b6004546001600160a01b031633146107c75760405162461bcd60e51b81526004016102229061116d565b600080846040516107d89190611052565b9081526040519081900360200190206006015460ff16600181111561080d57634e487b7160e01b600052602160045260246000fd5b141561083f5761083f8360007fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855610bc1565b816000846040516108509190611052565b908152602001604051809103902060030160008282546108709190611226565b925050819055507f169918161fee3fa37be845fd562b6e3d50e9b8534ea6d5653b5ac4ec99784e0383836000866040516108aa9190611052565b9081526040519081900360200181206003015461032e93929186906110c3565b336000805b600360009054906101000a90046001600160a01b03166001600160a01b03166377172f0e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561091d57600080fd5b505afa158015610931573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610955919061100e565b811015610a27576003546040517f7a5e8be90000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637a5e8be9906109a5908490600401611082565b60206040518083038186803b1580156109bd57600080fd5b505afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190610ee9565b6001600160a01b0316836001600160a01b03161415610a175760019150610a27565b610a20816112c0565b90506108cf565b5080610a455760405162461bcd60e51b8152600401610222906110ff565b610a50858585610bc1565b5050505050565b6005546001600160a01b03163314610a815760405162461bcd60e51b815260040161022290611136565b600480546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600580549091169055565b606060018281548110610ae557634e487b7160e01b600052603260045260246000fd5b906000526020600020018054610afa90611285565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2690611285565b8015610b735780601f10610b4857610100808354040283529160200191610b73565b820191906000526020600020905b815481529060010190602001808311610b5657829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b6005546001600160a01b031681565b7fe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b85581565b60006040518060e00160405280858152602001848152602001838152602001600081526020016000815260200160008152602001600180811115610c1557634e487b7160e01b600052602160045260246000fd5b90526001805480820182556000919091528551919250610c5e917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101906020870190610dac565b5080600085604051610c709190611052565b90815260200160405180910390206000820151816000019080519060200190610c9a929190610dac565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836001811115610d0557634e487b7160e01b600052602160045260246000fd5b02179055509050507f476058124261a8ae7e4d41820cb41462ba0e68b6514d039da02bd6f181abb05d848484604051610d409392919061109e565b60405180910390a150505050565b6040518060e0016040528060608152602001600081526020016000801916815260200160008152602001600081526020016000815260200160006001811115610da757634e487b7160e01b600052602160045260246000fd5b905290565b828054610db890611285565b90600052602060002090601f016020900481019282610dda5760008555610e20565b82601f10610df357805160ff1916838001178555610e20565b82800160010185558215610e20579182015b82811115610e20578251825591602001919060010190610e05565b50610e2c929150610e30565b5090565b5b80821115610e2c5760008155600101610e31565b600082601f830112610e55578081fd5b813567ffffffffffffffff80821115610e7057610e7061130f565b6040516020601f19601f8501168201018181108382111715610e9457610e9461130f565b604052828152848301602001861015610eab578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610ed7578081fd5b8135610ee281611325565b9392505050565b600060208284031215610efa578081fd5b8151610ee281611325565b600060208284031215610f16578081fd5b813567ffffffffffffffff811115610f2c578182fd5b610f3884828501610e45565b949350505050565b600080600060608486031215610f54578182fd5b833567ffffffffffffffff811115610f6a578283fd5b610f7686828701610e45565b9660208601359650604090950135949350505050565b600080600060608486031215610fa0578283fd5b833567ffffffffffffffff80821115610fb7578485fd5b610fc387838801610e45565b9450602086013593506040860135915080821115610fdf578283fd5b50610fec86828701610e45565b9150509250925092565b600060208284031215611007578081fd5b5035919050565b60006020828403121561101f578081fd5b5051919050565b6000815180845261103e816020860160208601611255565b601f01601f19169290920160200192915050565b60008251611064818460208701611255565b9190910192915050565b6001600160a01b0391909116815260200190565b90815260200190565b600060208252610ee26020830184611026565b6000606082526110b16060830186611026565b60208301949094525060400152919050565b6000608082526110d66080830187611026565b85602084015284604084015282810360608401526110f48185611026565b979650505050505050565b6020808252600d908201527f4e6f742076616c696461746f7200000000000000000000000000000000000000604082015260600190565b6020808252600e908201527f4e6f207065726d697373696f6e73000000000000000000000000000000000000604082015260600190565b6020808252600a908201527f4e6f74206c656467657200000000000000000000000000000000000000000000604082015260600190565b600060208252825160e060208401526111c1610100840182611026565b9050602084015160408401526040840151606084015260608401516080840152608084015160a084015260a084015160c084015260c08401516002811061121657634e487b7160e01b83526021600452602483fd5b60e0939093019290925250919050565b60008219821115611239576112396112f9565b500190565b600082821015611250576112506112f9565b500390565b60005b83811015611270578181015183820152602001611258565b8381111561127f576000848401525b50505050565b60028104600182168061129957607f821691505b602082108114156112ba57634e487b7160e01b600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112f2576112f26112f9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461133a57600080fd5b5056fea2646970667358221220a8e43a5748d5a1e966f32014f033a17a1be5a3b00e20a699caaed1a65f4a3f8f64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "add(string,uint256,bytes32)": {
        "params": {
          "_email": "가맹점주 이메일 해시",
          "_franchiseeId": "가맹점 아이디",
          "_payoutWaitTime": "제품구매 후 마일리지가 지급될 시간"
        }
      },
      "constructor": {
        "params": {
          "_validatorAddress": "검증자컬랙션의 주소"
        }
      },
      "franchiseeIdOf(uint256)": {
        "params": {
          "_idx": "배열의 순번"
        }
      },
      "franchiseeOf(string)": {
        "params": {
          "_franchiseeId": "가맹점의 아이디"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AddedFranchisee(string,uint256,bytes32)": {
        "notice": "가맹점이 추가될 때 발생되는 이벤트"
      },
      "IncreasedClearedMileage(string,uint256,uint256,string)": {
        "notice": "정산된 마일리가 증가할 때 발생되는 이벤트"
      },
      "IncreasedProvidedMileage(string,uint256,uint256,string)": {
        "notice": "가맹점의 마일리지가 증가할 때 발생되는 이벤트"
      },
      "IncreasedUsedMileage(string,uint256,uint256,string)": {
        "notice": "사용자의 마일리지가 증가할 때 발생되는 이벤트"
      }
    },
    "kind": "user",
    "methods": {
      "NULL()": {
        "notice": "Hash value of a blank string"
      },
      "add(string,uint256,bytes32)": {
        "notice": "가맹점을 추가한다"
      },
      "addClearedMileage(string,uint256,string)": {
        "notice": "정산된 총 마일지리를 누적한다"
      },
      "addProvidedMileage(string,uint256,string)": {
        "notice": "지급된 총 마일지리를 누적한다"
      },
      "addUsedMileage(string,uint256,string)": {
        "notice": "사용된 총 마일지리를 누적한다"
      },
      "constructor": {
        "notice": "생성자"
      },
      "franchiseeIdOf(uint256)": {
        "notice": "가맹점의 아이디를 리턴한다"
      },
      "franchiseeOf(string)": {
        "notice": "가맹점 데이터를 리턴한다"
      },
      "franchiseesLength()": {
        "notice": "가맹점의 갯수를 리턴한다"
      },
      "getClearMileage(string)": {
        "notice": "정산되어야 할 마일지리의 량을 리턴합니다."
      },
      "setLedgerAddress(address)": {
        "notice": "원장 컨트랙트의 주소를 호출한다."
      }
    },
    "notice": "가맹점컬랙션",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2309,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "franchisees",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(FranchiseeData)2304_storage)"
      },
      {
        "astId": 2312,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "items",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 2314,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "validatorAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2317,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "validatorCollection",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ValidatorCollection)4933"
      },
      {
        "astId": 2361,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "ledgerAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 2363,
        "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
        "label": "deployer",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ValidatorCollection)4933": {
        "encoding": "inplace",
        "label": "contract ValidatorCollection",
        "numberOfBytes": "20"
      },
      "t_enum(FranchiseeStatus)2288": {
        "encoding": "inplace",
        "label": "enum FranchiseeCollection.FranchiseeStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_struct(FranchiseeData)2304_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct FranchiseeCollection.FranchiseeData)",
        "numberOfBytes": "32",
        "value": "t_struct(FranchiseeData)2304_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(FranchiseeData)2304_storage": {
        "encoding": "inplace",
        "label": "struct FranchiseeCollection.FranchiseeData",
        "members": [
          {
            "astId": 2290,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "franchiseeId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2292,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "provideWaitTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2294,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "email",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 2296,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "providedMileage",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2298,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "usedMileage",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 2300,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "clearedMileage",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 2303,
            "contract": "contracts/FranchiseeCollection.sol:FranchiseeCollection",
            "label": "status",
            "offset": 0,
            "slot": "6",
            "type": "t_enum(FranchiseeStatus)2288"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}