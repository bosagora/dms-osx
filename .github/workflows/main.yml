name: CI

on: [push, pull_request ]

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}

    services:
      postgres:
        image: postgres:12.0
        env:
          POSTGRES_USER: agora
          POSTGRES_PASSWORD: 12345678
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Check formatting of Contract
        run: cd packages/contracts && yarn run formatting:check
      - name: Compile of Contract
        run: cd packages/contracts && yarn run build && yarn run build:npm
      - name: Run Hardhat Tests of Contract
        env:
          REPORT_GAS: true
        run: cd packages/contracts && yarn run test
      - name: Run solidity-docgen of Contract
        run: cd packages/contracts && yarn run docgen

      - name: Copy env of Relay
        run: cp packages/relay/env/.env.sample packages/relay/env/.env
      - name: Check formatting of Relay
        run: cd packages/relay && yarn run formatting:check
      - name: Compile of Relay
        run: cd packages/relay && yarn run build
      - name: Run Hardhat Tests of Relay
        env:
          REPORT_GAS: true
        run: cd packages/relay && yarn run test

      - name: Copy env of Node
        run: cp packages/node/env/.env.sample packages/node/env/.env
      - name: Check formatting of Node
        run: cd packages/node && yarn run formatting:check
      - name: Compile of Node
        run: cd packages/node && yarn run build
      - name: Run Hardhat Tests of Node
        env:
          REPORT_GAS: true
        run: cd packages/node && yarn run test

      - name: Copy env of Faker
        run: cp packages/faker/env/.env.sample packages/faker/env/.env
      - name: Check formatting of Faker
        run: cd packages/faker && yarn run formatting:check
      - name: Compile of Faker
        run: cd packages/faker && yarn run build
      - name: Run Hardhat Tests of Faker
        env:
          REPORT_GAS: true
        run: cd packages/faker && yarn run test
